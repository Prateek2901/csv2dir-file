<?xml version="1.0" encoding="UTF-8"?><xml><records><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Taba, Seyyed Ehsan Salamati</author><author>Keivanloo, Iman</author><author>Zou, Ying</author><author>Wang, Shaohua</author></authors></contributors><titles><title>An exploratory study on the usage of common interface elements in android applications</title><secondary-title>Journal of Systems and Software</secondary-title></titles><periodical><full-title>Journal of Systems and Software</full-title></periodical><pages>491-504</pages><volume>131</volume><keywords><keyword>Common UI elements</keyword><keyword>Mobile applications</keyword><keyword>User-perceived quality</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Inc.</publisher><electronic-resource-num>10.1016/j.jss.2016.07.010</electronic-resource-num><urls><pdf-urls><url>internal-pdf://taba2016.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.jss.2016.07.010</url></web-urls></urls><abstract>The number of mobile applications has increased drastically in the past few years. A recent study has shown that reusing source code is a common practice for Android application development. However, reuse in mobile applications is not necessarily limited to the source code (i.e., program logic). User interface (UI) design plays a vital role in constructing the user-perceived quality of a mobile application. The user-perceived quality reflects the users’ opinions of a product. For mobile applications, it can be quantified by the number of downloads and raters. In this study, we extract commonly used UI elements, denoted as Common Element Sets (CESs), from user interfaces of applications. Moreover, we highlight the characteristics of CESs that can result in a high user-perceived quality by proposing various metrics. Through an empirical study on 1292 mobile applications, we observe that (i) CESs of mobile applications widely occur among and across different categories; (ii) certain characteristics of CESs can provide a high user-perceived quality; and (iii) through a manual analysis, we recommend UI templates that are extracted and summarized from CESs for developers. Developers and quality assurance personnel can use our guidelines to improve the quality of mobile applications.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Shrestha, Babins</author><author>Ma, Di</author><author>Zhu, Yan</author><author>Li, Haoyu</author><author>Saxena, Nitesh</author></authors></contributors><titles><title>Tap-Wave-Rub: Lightweight Human Interaction Approach to Curb Emerging Smartphone Malware</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>2270-2283</pages><volume>10</volume><issue>11</issue><keywords><keyword>NFC</keyword><keyword>context recognition</keyword><keyword>malware</keyword><keyword>mobile devices</keyword><keyword>sensors</keyword></keywords><dates><year>2015</year></dates><electronic-resource-num>10.1109/TIFS.2015.2436364</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Tap-Wave-Rub Lightweight Human Interaction Approach to Curb Emerging Smartphone Malware.pdf</url></pdf-urls></urls><abstract>Malware is a burgeoning threat for smartphones and continuing advancing. Traditional defenses to malware, however, are not suitable for smartphones due to their resource intensive nature. This necessitates the design of novel mechanisms that can consider the specifics of the smartphone malware and smartphones themselves. In this paper, we introduce a lightweight permission enforcement approach - Tap-Wave-Rub (TWR) - for smartphone malware prevention. TWR is based on simple cyber-physical human interactions, i.e., human gestures, that are very quick and intuitive but less likely to be exhibited in users' daily activities. Presence or absence of such gestures, prior to accessing an application, can effectively inform the OS whether the access request is benign or malicious. In particular, we present the design of two mechanisms: 1) acceleration-based phone tapping detection and 2) proximity-based finger tapping, rubbing, or hand waving detection. The first mechanism is geared for near field communication applications, which usually require the user to tap her phone with another device. The second mechanism involves very simple gestures, i.e., tapping or rubbing a finger near the top of phone's screen or waving a hand close to the phone, and broadly appeals to many applications (e.g., SMS). In addition, we present the TWR-enhanced Android permission model, the prototypes implementing the underlying gesture recognition mechanisms, and a variety of novel experiments to evaluate these mechanisms. Our results suggest the proposed approach could be very effective for malware detection/prevention, with quite low false positives and false negatives, while imposing little to no additional burden on the users.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Suarez-tangil, Guillermo</author><author>Tapiador, Juan E</author><author>Pietro, Roberto Di</author><author>Lucent, Alcatel</author><author>Labs, Bell</author></authors></contributors><titles><title>C ov er f e at u re</title></titles><periodical/><keywords/><dates><year>2014</year></dates><urls><pdf-urls><url>internal-pdf://Thwarting Obfuscated Malware via Differential Fault Analysis.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Leavitt, Neal</author></authors></contributors><titles><title>Security Requires a New Approach</title></titles><periodical/><pages>16-19</pages><keywords/><dates><year>2017</year></dates><urls><pdf-urls><url>internal-pdf://Today-s Mobile Security Requires a New Approach.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Suarez-Tangil, Guillermo</author><author>Tapiador, Juan E.</author><author>Peris-Lopez, Pedro</author><author>Pastrana, Sergio</author></authors></contributors><titles><title>Power-aware anomaly detection in smartphones: An analysis of on-platform versus externalized operation</title><secondary-title>Pervasive and Mobile Computing</secondary-title></titles><periodical><full-title>Pervasive and Mobile Computing</full-title></periodical><pages>137-151</pages><volume>18</volume><keywords><keyword>Anomaly detection</keyword><keyword>Outsourced security</keyword><keyword>Power consumption</keyword><keyword>Smartphone security</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier B.V.</publisher><isbn>1574-1192</isbn><electronic-resource-num>10.1016/j.pmcj.2014.10.007</electronic-resource-num><urls><pdf-urls><url>internal-pdf://suareztangil2015.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.pmcj.2014.10.007</url></web-urls></urls><abstract>Many security problems in smartphones and other smart devices are approached from an anomaly detection perspective in which the main goal reduces to identifying anomalous activity patterns. Since machine learning algorithms are generally used to build such detectors, one major challenge is adapting these techniques to battery-powered devices. Many recent works simply assume that on-platform detection is prohibitive and suggest using offloaded (i.e., cloud-based) engines. Such a strategy seeks to save battery life by exchanging computation and communication costs, but it still remains unclear whether this is optimal or not in all circumstances. In this paper, we evaluate different strategies for offloading certain functional tasks in machine learning based detection systems. Our experimental results confirm the intuition that outsourced computation is clearly the best option in terms of power consumption, outweighing on-platform strategies in, essentially, all practical scenarios. Our findings also point out noticeable differences among different machine learning algorithms, and we provide separate consumption models for functional blocks (data preprocessing, training, test, and communications) that can be used to obtain power consumption estimates and compare detectors.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Wang, Tianbo</author><author>Xia, Chunhe</author><author>Li, Zhong</author><author>Liu, Xiaochen</author><author>Xiang, Yang</author></authors></contributors><titles><title>The Spatial-temporal Perspective: The Study of the Propagation of Modern Social Worms</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>1-1</pages><volume>6013</volume><issue>c</issue><keywords/><dates><year>2017</year></dates><electronic-resource-num>10.1109/TIFS.2017.2711424</electronic-resource-num><urls><pdf-urls><url>internal-pdf://The Spatial-Temporal Perspective The Study of the Propagation of Modern Social Worms.pdf</url></pdf-urls><web-urls><url>http://ieeexplore.ieee.org/document/7938413/</url></web-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Mavoungou, Silvere</author><author>Kaddoum, Georges</author><author>Taha, Mostafa</author><author>Matar, Georges</author></authors></contributors><titles><title>Survey on threats and attacks on mobile networks</title><secondary-title>IEEE Access</secondary-title></titles><periodical><full-title>IEEE Access</full-title></periodical><pages>4543-4572</pages><volume>4</volume><keywords><keyword>Intrusion Detection</keyword><keyword>Mobile network security</keyword><keyword>authentication attacks</keyword><keyword>availability attacks</keyword><keyword>confidentiality attacks</keyword><keyword>flooding attacks</keyword><keyword>impersonation attacks</keyword><keyword>integrity attacks</keyword><keyword>signaling attacks</keyword><keyword>spoofing attacks</keyword><keyword>trusted Computing</keyword></keywords><dates><year>2016</year></dates><electronic-resource-num>10.1109/ACCESS.2016.2601009</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Survey on Threats and Attacks on Mobile Networks.pdf</url></pdf-urls></urls><abstract>Since the 1G of mobile technology, mobile wireless communication systems have continued to evolve, bringing into the network architecture new interfaces and protocols, as well as unified services, high data capacity of data transmission, and packet-based transmission (4G). This evolution has also introduced new vulnerabilities and threats, which can be used to launch attacks on different network components, such as the access network and the core network. These drawbacks stand as a major concern for the security and the performance of mobile networks, since various types of attacks can take down the whole network and cause a denial of service, or perform malicious activities. In this survey, we review the main security issues in the access and core network (vulnerabilities and threats) and provide a classification and categorization of attacks in mobile network. In addition, we analyze major attacks on 4G mobile networks and corresponding countermeasures and current mitigation solutions, discuss limits of current solutions, and highlight open research areas.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Aquaculture, Increased</author></authors></contributors><titles><title>The Perils of</title></titles><periodical/><pages>1489-1492</pages><volume>88</volume><issue>September</issue><keywords/><dates><year>2005</year></dates><isbn>0-226-67574-2</isbn><accession-num>19266772</accession-num><electronic-resource-num>10.2307/357120</electronic-resource-num><urls><pdf-urls><url>internal-pdf://The Perils of Android Security Configuration.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Turkanović, Muhamed</author><author>Polančič, Gregor</author></authors></contributors><titles><title>On the security of certain e-communication types: Risks, user awareness and recommendations</title><secondary-title>Journal of Information Security and Applications</secondary-title></titles><periodical><full-title>Journal of Information Security and Applications</full-title></periodical><pages>193-205</pages><volume>18</volume><issue>4</issue><keywords><keyword>Awareness</keyword><keyword>E-communication</keyword><keyword>Electronic communication</keyword><keyword>Privacy</keyword><keyword>Security</keyword><keyword>Trust</keyword></keywords><dates><year>2013</year></dates><isbn>2214-2126</isbn><electronic-resource-num>10.1016/j.jisa.2013.07.003</electronic-resource-num><urls><pdf-urls><url>internal-pdf://turkanovi2013.pdf</url></pdf-urls></urls><abstract>Electronic communication is nowadays ubiquitous, irreplaceable and powerful, but because of its significance, the impact on an individual, if something wrong happens, is negligible. A literature review was conducted with the aim of analyzing the term of electronic communication itself as well the aspect of its security. The analysis was performed only on certain popular e-communication types (e.g. e-mail, social media and smartphones). The objective was to review electronic communication in general and to determine if the public is aware of risks concerning it. As a result we concluded that electronic communication is mainly misunderstood and that the public is becoming aware of its security and privacy risk. © 2013 Elsevier Ltd. All rights reserved.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Li, Li</author><author>Li, Daoyuan</author><author>Bissyande, Tegawende F.</author><author>Klein, Jacques</author><author>Le Traon, Yves</author><author>Lo, David</author><author>Cavallaro, Lorenzo</author></authors></contributors><titles><title>Understanding Android App Piggybacking: A Systematic Study of Malicious Code Grafting</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>1269-1284</pages><volume>12</volume><issue>6</issue><keywords><keyword>Android security</keyword><keyword>android malware</keyword><keyword>code grafting</keyword><keyword>piggybacking attack</keyword></keywords><dates><year>2017</year></dates><electronic-resource-num>10.1109/TIFS.2017.2656460</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Understanding Android App Piggybacking A Systematic Study of Malicious Code Grafting.pdf</url></pdf-urls></urls><abstract>—The Android packaging model offers ample opportunities for malware writers to piggyback malicious code in popular apps, which can then be easily spread to a large user base. Although recent research has produced approaches and tools to identify piggybacked apps, the literature lacks a comprehensive investigation into such phenomenon. We fill this gap by 1) systematically building a large set of piggybacked and benign apps pairs, which we release to the community, 2) em-pirically studying the characteristics of malicious piggybacked apps in comparison with their benign counterparts, and 3) providing insights on piggybacking processes. Among several findings providing insights analysis techniques should build upon to improve the overall detection and classification accuracy of piggybacked apps, we show that piggy-backing operations not only concern app code, but also extensively manipulates app resource files, largely contradicting common beliefs. We also find that piggybacking is done with little sophistication, in many cases automatically, and often via library code.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Whalen, Tara</author><author>Biddle, Robert</author><author>Oorschot, P C Van</author></authors></contributors><titles><title>The Usable Security of Passwords based on Digital Objects : From Design and Analysis to User Study ∗</title></titles><periodical/><pages>1-21</pages><volume>6</volume><issue>3</issue><keywords/><dates><year>2010</year></dates><urls><pdf-urls><url>internal-pdf://User Study- Analysis- and Usable Security of Passwords Based on Digital Objects.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Ling, Zhen</author><author>Luo, Junzhou</author><author>Wu, Kui</author><author>Yu, Wei</author><author>Fu, Xinwen</author></authors></contributors><titles><title>TorWard: Discovery, Blocking, and Traceback of Malicious Traffic over Tor</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>2515-2530</pages><volume>10</volume><issue>12</issue><keywords><keyword>Intrusion Detection System</keyword><keyword>Malicious Traffic</keyword><keyword>Tor</keyword></keywords><dates><year>2015</year></dates><isbn>9781479933600</isbn><electronic-resource-num>10.1109/TIFS.2015.2465934</electronic-resource-num><urls><pdf-urls><url>internal-pdf://TorWard Discovery- Blocking- and Traceback of Malicious Traffic Over Tor.pdf</url></pdf-urls></urls><abstract>Tor is a popular low-latency anonymous communication system. However, it is currently abused in various ways. Tor exit routers are frequently troubled by administrative and legal complaints. To gain an insight into such abuse, we design and implement a novel system, TorWard, for the discovery and systematic study of malicious traffic over Tor. The system can avoid legal and administrative complaints and allows the investigation to be performed in a sensitive environment such as a university campus. An IDS (Intrusion Detection System) is used to discover and classify malicious traffic. We performed comprehensive analysis and extensive real-world experiments to validate the feasibility and effectiveness of TorWard. Our data shows that around 10% Tor traffic can trigger IDS alerts. Malicious traffic includes P2P traffic, malware traffic (e.g., botnet traffic), DoS (Denial-of-Service) attack traffic, spam, and others. Around 200 known malware have been identified. To the best of our knowledge, we are the first to perform malicious traffic categorization over Tor.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Frank, Mario</author><author>Biedert, Ralf</author><author>Ma, Eugene</author><author>Martinovic, Ivan</author><author>Song, Dawn</author></authors></contributors><titles><title>Touchalytics: On the applicability of touchscreen input as a behavioral biometric for continuous authentication</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>136-148</pages><volume>8</volume><issue>1</issue><keywords><keyword>Authentication</keyword><keyword>biometrics</keyword><keyword>intrusion detection</keyword></keywords><dates><year>2013</year></dates><isbn>1556-6013 VO - 8</isbn><electronic-resource-num>10.1109/TIFS.2012.2225048</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Touchalytics On the Applicability of Touchscreen Input as a Behavioral Biometric for Continuous Authentication.pdf</url></pdf-urls></urls><abstract>We investigate whether a classifier can continuously authenticate users based on the way they interact with the touchscreen of a smart phone. We propose a set of 30 behavioral touch features that can be extracted from raw touchscreen logs and demonstrate that different users populate distinct subspaces of this feature space. In a systematic experiment designed to test how this behavioral pattern exhibits consistency over time, we collected touch data from users interacting with a smart phone using basic navigation maneuvers, i.e., up-down and left-right scrolling. We propose a classification framework that learns the touch behavior of a user during an enrollment phase and is able to accept or reject the current user by monitoring interaction with the touch screen. The classifier achieves a median equal error rate of 0% for intra-session authentication, 2%-3% for inter-session authentication and below 4% when the authentication test was carried out one week after the enrollment phase. While our experimental findings disqualify this method as a standalone authentication mechanism for long-term authentication, it could be implemented as a means to extend screen-lock time or as a part of a multi-modal biometric authentication system.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Makridakis, Andreas</author><author>Athanasopoulos, Elias</author><author>Antonatos, Spiros</author><author>Antoniades, Demetres</author><author>Ioannidis, Sotiris</author><author>Markatos, Evangelos P</author></authors></contributors><titles><title>Understanding the Behavior of Malicious Applications in Social Networks</title><secondary-title>IEEE Network - September/October 2010 19</secondary-title></titles><periodical><full-title>IEEE Network - September/October 2010 19</full-title></periodical><pages>14-19</pages><issue>October</issue><keywords/><dates><year>2010</year></dates><isbn>0890-8044</isbn><electronic-resource-num>10.1109/MNET.2010.5578913</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Understanding the behavior of malicious applications in social networks.pdf</url></pdf-urls></urls><abstract>The World Wide Web has evolved from a collection of static HTML pages to an assortment of Web 2.0 applications. Online social networking in particular is becoming more popular by the day since the establishment of SixDegrees in 1997. Millions of people use social networking web sites daily, such as Facebook, My- Space, Orkut, and LinkedIn. A side-effect of this growth is that possible exploits can turn OSNs into platforms for malicious and illegal activities, like DDoS attacks, privacy violations, disk compromise, and malware propagation. In this article we show that social networking web sites have the ideal properties to become attack platforms. We introduce a new term, antisocial networks, that refers to distributed systems based on social networking web sites which can be exploited to carry out network attacks. An adversary can take control of a visitor’s session by remotely manipulating their browsers through legitimate web control functionality such as image-loading HTML tags, JavaScript instructions, and Java applets.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Wang, Xing</author><author>Wang, Wei</author><author>He, Yongzhong</author><author>Liu, Jiqiang</author><author>Han, Zhen</author><author>Zhang, Xiangliang</author></authors></contributors><titles><title>Characterizing Android apps’ behavior for effective detection of malapps at large scale</title><secondary-title>Future Generation Computer Systems</secondary-title></titles><periodical><full-title>Future Generation Computer Systems</full-title></periodical><pages>30-45</pages><volume>75</volume><keywords><keyword>Android</keyword><keyword>Feature comparison</keyword><keyword>Malicious apps detection</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.future.2017.04.041</electronic-resource-num><urls><pdf-urls><url>internal-pdf://video.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.future.2017.04.041</url></web-urls></urls><abstract>Android malicious applications (malapps) have surged and been sophisticated, posing a great threat to users. How to characterize, understand and detect Android malapps at a large scale is thus a big challenge. In this work, we are motivated to discover the discriminatory and persistent features extracted from Android APK files for automated malapp detection at a large scale. To achieve this goal, firstly we extract a very large number of features from each app and categorize the features into two groups, namely, app-specific features as well as platform-defined features. These feature sets will then be fed into four classifiers (i.e., Logistic Regression, linear SVM, Decision Tree and Random Forest) for the detection of malapps. Secondly, we evaluate the persistence of app-specific and platform-defined features on classification performance with two data sets collected in different time periods. Thirdly, we comprehensively analyze the relevant features selected by Logistic Regression classifier to identify the contributions of each feature set. We conduct extensive experiments on large real-world app sets consisting of 213,256 benign apps collected from six app markets, 4,363 benign apps from Google Play market, and 18,363 malapps. The experimental results and our analysis give insights regarding what discriminatory features are most effective to characterize malapps for building an effective and efficient malapp detection system. With the selected discriminatory features, the Logistic Regression classifier yields the best true positive rate as 96% with a false positive rate as 0.06%.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Han, Lansheng</author><author>Liu, Songsong</author><author>Han, Shuxia</author><author>Jia, Wenjing</author><author>Lei, Jingwei</author></authors></contributors><titles><title>Owner based malware discrimination</title><secondary-title>Future Generation Computer Systems</secondary-title></titles><periodical><full-title>Future Generation Computer Systems</full-title></periodical><keywords><keyword>Computability</keyword><keyword>Malware discrimination</keyword><keyword>Owner</keyword><keyword>Relativity of discrimination</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.future.2016.05.020</electronic-resource-num><urls><pdf-urls><url>internal-pdf://video_3.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.future.2016.05.020</url></web-urls></urls><abstract>A piece of malware code can be harmful in one's system but totally harmless in another's. In this paper, we point out that the detection of malicious code or software is actually a matter of discrimination which depends on the owners of the computer systems. We propose an owner based malicious software discrimination model, named as Unlimited Register Machine of Owners (URMO). First, we characterize and analyze the limitations of existing discrimination techniques in theory by using the discrimination model of Unlimited Register Machine (URM) and then move on to construct the URMO discrimination model by giving the two important elements of malicious behavior: an operation and the object of the operation. The relationship between an operation and the object of the operation is fundamental to solving the relativity of the discrimination problem about malice, which is also the advantage of the URMO model. Finally, by applying the model to discriminate real-world malware and comparing it with existing popular antivirus software, we demonstrate the effectiveness and superior performance of the URMO model.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Elish, Karim O.</author><author>Deng, Yipan</author><author>Yao, Danfeng Daphne</author><author>Kafura, Dennis</author></authors></contributors><titles><title>Device-based isolation for securing cryptographic keys</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>1130-1135</pages><volume>19</volume><keywords><keyword>Confidentiality</keyword><keyword>Cryptography</keyword><keyword>Data security</keyword><keyword>Device-based isolation</keyword><keyword>Mobile device</keyword></keywords><dates><year>2013</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.procs.2013.06.160</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050913007680-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2013.06.160</url></web-urls></urls><abstract>We describe an effective device-based isolation approach for achieving data security. We show its use in protecting the secrecy of highly sensitive data that is crucial to security operations, such as cryptographic keys used for decrypting ciphertext or signing digital signatures. Private key is usually encrypted in its storage when not used; however, when being used, the plaintext key is loaded into the memory of the host for access. We present a novel and practical solution and its prototype called DataGuard to protect the secrecy of the highly sensitive data through the storage isolation and secure tunneling enabled by a mobile handheld device. DataGuard can be deployed for the key protection of individuals or organizations. We implement three prototypes and conduct extensive experiments to evaluate the feasibility and performance of DataGuard. The results show that our approach performs well without significant overhead. ?? 2013 The Authors. Published by Elsevier B.V.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Salerno, Steven</author><author>Sanzgiri, Ameya</author><author>Upadhyaya, Shambhu</author></authors></contributors><titles><title>Exploration of attacks on current generation smartphones</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>546-553</pages><volume>5</volume><keywords><keyword>Denial of service</keyword><keyword>Network security</keyword><keyword>Smartphones</keyword></keywords><dates><year>2011</year></dates><isbn>18770509 (ISSN)</isbn><electronic-resource-num>10.1016/j.procs.2011.07.071</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050911003966-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2011.07.071</url></web-urls></urls><abstract>Due to the ever increasing capabilities of current generation smartphones, they are quickly becoming more attractive targets for malicious attackers. The potential of porting attacks and malware from modern computers to these mobile devices is becoming a reality. In this paper, we explore the possibility of staging some attacks on the 802.11 network interface which is common to all smartphones. We begin by explaining and carrying out the exploitation of the SSH vulnerability on jailbroken iPhones that was discovered in late 2009. This paper then looks at simple network flooding attacks with the intention of causing a simple denial of service by depleting the battery life of the device. It is also our intention to show that these flooding attacks can be carried out utilizing a smartphone as the aggressor in order to attack other mobile devices and that the procedure for such attacks is not difficult. A simple tool is developed in order to carry out these attacks and to show that even though these attacks are relatively simple, they can have profound effects. © 2011 Published by Elsevier Ltd.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Kaur, Parmjit</author><author>Sharma, Sumit</author></authors></contributors><titles><title>Spyware detection in android using hybridization of description analysis, permission mapping and interface analysis</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>794-803</pages><volume>46</volume><issue>Icict 2014</issue><keywords><keyword>Description</keyword><keyword>Interface analysis</keyword><keyword>Permissions</keyword><keyword>Source code analysis</keyword><keyword>Spyware</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Masson SAS</publisher><isbn>hxhxhcjcjcjcjcjcjcjcjcjcjcjfjcjcjcjcjfjcjcjfhf</isbn><electronic-resource-num>10.1016/j.procs.2015.02.148</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915002124-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2015.02.148</url></web-urls></urls><abstract>Among all available Mobile OS, Android is an ideal target for attackers due to its huge popularity. Android provides open-source OS and also provides ability to install third party applications that poses threat of user's privacy breach. In this paper, we have a close look at permissions that are granted during installation period. We have proposed a hybrid approach for detection of malicious applications by scanning with different antivirus softwares and comparing all. This hybrid approach depends upon three parameters-Description Mapping, Interface Analysis and Source Code Analysis that defines an application's behaviour i.e. either it behaves malicious or normal.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Vignesh, U.</author><author>Asha, S.</author></authors></contributors><titles><title>Modifying security policies towards BYOD</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>511-516</pages><volume>50</volume><keywords><keyword>Bring your own device (BYOD)</keyword><keyword>IT consumerization</keyword><keyword>Mobile device</keyword><keyword>Security policies</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Masson SAS</publisher><isbn>18770509</isbn><accession-num>1196914876</accession-num><electronic-resource-num>10.1016/j.procs.2015.04.023</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915005244-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2015.04.023</url></web-urls></urls><abstract>In the IT Consumerization phase, the organizations permit their employees to bring their personally owned device to workplace. This is achieved through enforcing policy or agreement - Bring Your Own Device. The BYOD policies adopted in numerous organizations are vague and generally immature. The prevailing security policies in BYOD are no more supportive for mobile devices like smartphones, tablets and laptops. The security policies must be modified to suit these devices. To mitigate this downside, 3-tier enhanced policy architecture is proposed which specifies the policies to be followed by the device, applications and organizations.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Becker, A.</author><author>Mladenow, A.</author><author>Kryvinska, N.</author><author>Strauss, C.</author></authors></contributors><titles><title>Evolving taxonomy of business models for mobile service delivery platform</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>650-657</pages><volume>10</volume><keywords><keyword>Business models</keyword><keyword>Classification</keyword><keyword>Comparative analysis</keyword><keyword>Mobile service delivery</keyword><keyword>Platform models</keyword></keywords><dates><year>2012</year></dates><isbn>1877-0509</isbn><electronic-resource-num>10.1016/j.procs.2012.06.083</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050912004401-main.pdf</url></pdf-urls></urls><abstract>The state of mobile technology and its widespread use has evolved drastically within the past several years. Cell phones with small monochrome displays - designed solely for phone calls and text messaging - have turned into miniaturized computers with dual-core processors. Combined with 3G standards such as UMTS, mobile devices nowadays offer almost the same freedom in exploring the Internet as desktop PCs do. Apple's iPhone, Google's Android, and the availability of mobile broadband Internet have changed the mobile landscape, and therefore the way in which mobile services are delivered to their users. Thus, we focus in this paper on the theory and implementation of four distinct platform models for mobile service delivery. Furthermore, we perform a classification of platform agility features, business and technology oriented, along with a comparative analysis of their effectiveness. © 2012 Published by Elsevier Ltd.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Khan, Jalaluddin</author><author>Abbas, Haider</author><author>Al-Muhtadi, Jalal</author></authors></contributors><titles><title>Survey on mobile user's data privacy threats and defense mechanisms</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>376-383</pages><volume>56</volume><issue>1</issue><keywords><keyword>Data privacy</keyword><keyword>Malware</keyword><keyword>Mobile security</keyword><keyword>Threats and vulnerabilities</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2015.07.223</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915017044-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2015.07.223</url></web-urls></urls><abstract>Nowadays, mobile devices have become an integral part of our daily life. These have proven to be an advantageous scientific invention that fills personal and business needs in a very efficient manner. In this era, the availability of mobile services has significantly increased because of the rich variety of mobile devices and essential applications provided by mobile device manufacturers. At the same time, numerous mobile security issues and data privacy threats are challenging both manufacturers and users. Therefore, mobile devices are an ideal target for various security issues and data privacy threats in a mobile ecosystem. In this paper, we provide a brief survey of the security challenges, threats, and vulnerabilities of a mobile ecosystem. Furthermore, we discussed some key points required to ensure mobile security and defend against data privacy threats. The emphasis of the discussion is, strong protection and the restriction of malicious activity at the application developer end, application stores end, and operating system and mobile device manufactures end by preventing the user from using non-recommended applications (which may be malicious) and considering biometric features for the authentication of real users in the mobile devices. Also briefly discussing the defense mechanisms that are considered to be a relatively better approach for securing personal and business related data or information in the mobile devices.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Deepa, K.</author><author>Radhamani, G.</author><author>Vinod, P.</author></authors></contributors><titles><title>Investigation of feature selection methods for android malware analysis</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>841-848</pages><volume>46</volume><issue>Icict 2014</issue><keywords><keyword>Android malware</keyword><keyword>Feature selection methods: Dimensionality reductio</keyword></keywords><dates><year>2015</year></dates><electronic-resource-num>10.1016/j.procs.2015.02.153</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915002173-main.pdf</url></pdf-urls></urls><abstract>In this paper we present a method for detecting malicious Android applications using feature selection methods. Three distinguishing features i.e. opcodes, methods and strings are extracted from each Android file and using feature selection techniques, prominent and diverse, top ranking features are mined. Different tree classifiers are used to categorize Android files as either malware or benign. Results show that methods is the most credible feature, which gives accuracy of 88.75% with 600 attributes using Correlation Feature Selection method and Adaboost with J48 as base classifier.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Almin, Shaikh Bushra</author><author>Chatterjee, Madhumita</author></authors></contributors><titles><title>A novel approach to detect Android malware</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>407-417</pages><volume>45</volume><issue>C</issue><keywords><keyword>Android</keyword><keyword>App/s</keyword><keyword>Benign</keyword><keyword>Cluster</keyword><keyword>Malicious</keyword><keyword>Malware</keyword><keyword>Permissions</keyword></keywords><dates><year>2015</year></dates><electronic-resource-num>10.1016/j.procs.2015.03.170</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915004135-main.pdf</url></pdf-urls></urls><abstract>Android is the world's most popular and the largest installed base of any mobile platform. It has gained huge popularity among Smartphones and is growing very fast because it gives its users a world class platform for creating apps and games and allows them to be distributed instantly. Secondly, it also offers ample free third party applications to be downloaded and installed from Google Play, the premier marketplace for selling and distributing Android apps. Android openness has made it a favourite for users and developers alike. Many apps are getting downloaded by the user from play store every month. However due to this, the number of harmful apps in the form of malwares getting downloaded are also increasing. These malwares performs the various activities behind the scene, such as stealing various sensitive information of the users and signing up victims to subscription services. As a result of this, users are getting affected and their privacy gets compromised. As developers are also free to develop and publish their own creation in a play store without undergoing any scrutiny of their apps, they tend to take the advantage of user's inability to analyze the risk of such apps. This paper proposes a system which would help the users in analysing and removing such harmful apps and thereby protecting their security and privacy. This is achieved by analysing the various permissions used by an application that it has requested during installation. The overall process of analysing apps is done using clustering and classification techniques. The major objective of the proposed system is to detect and remove the malwares that are present in the user's Android device.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Sharma, Kavita</author><author>Gupta, B. B.</author></authors></contributors><titles><title>Multi-layer Defense Against Malware Attacks on Smartphone Wi-Fi Access Channel</title><secondary-title>Physics Procedia</secondary-title></titles><periodical><full-title>Physics Procedia</full-title></periodical><pages>19-25</pages><volume>78</volume><issue>December 2015</issue><keywords><keyword>Mobile Malware attack</keyword><keyword>SSL Protocol</keyword><keyword>Smartphone Malware Threat</keyword><keyword>Smartphone Security</keyword><keyword>SmartphoneWi-Fi</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2016.02.005</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916000077-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.02.005</url></web-urls></urls><abstract>With increase in Smartphone users, uses have also increased such as email, gaming, internet banking etc. which requires it to always remain connected with Wi-Fi, thus making it vulnerable to numerous attacks. The endeavour in this paper is to explore Smartphone malware and combat challenges associated with it. Authors have proposed a novel three layer security model which detect and defence against the malware attack in network traffic and communication access point. Fine grained channel permission system is used to grant the permission to access the Wi-Fi access point thus providing security when any communication session takes place between Smartphone user and server though SSL handshake protocol. It also helps in detection of the interval time between packets sent and received which give impetus for threshold value used by TMM-HDT algorithm.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Arora, Anuja</author><author>Khera, Apoorva</author></authors></contributors><titles><title>Wi-Fi Enabled Personal Computer Network Monitoring System Using Smart Phone with Enhanced Security Measures</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>114-122</pages><volume>70</volume><keywords><keyword>Hole 196 vulnerability</keyword><keyword>Personal Network Monitoring System</keyword><keyword>WPA/WPA2</keyword><keyword>symmetric encryption</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2015.10.052</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915032160-main.pdf</url></pdf-urls></urls><abstract>In today's Scenario, Remote Monitoring is a fascinating research aspect of mobile computing technology. In this research paper, our prime focus is on the Personal computer remote monitoring system. Another challenging task is the security while sharing data in remotely monitoring PC or handheld devices over Wi-Fi, 3G, and Bluetooth. An application model is proposed for Secure Personal Computer Network Monitoring System. The proposed application model is efficiently able to communicate and monitor the working between handheld devices and the Personal Computer over Wi-Fi using handheld devices. Monitoring the current state of any machine in the network is possible by fetching the current state of machine on android phone. In the proposed application model mobile devices are able to watch the running processes of personal computer(s). In the proposed and implemented application model, whatever information the handheld device (android phone) requests pertaining to the network is passed on by the server.We executed and tested the designed monitoring system for set of operations such as play-stop-pause, Audio/ video recording, active sessions of web sites monitoring, grabbing files, create or edit word documents, edit and sharing of important excel files, making and sharing presentations, Logging Off and Shutting Down the Personal Computer. A secured interaction, under already existing, wireless security protocols is accomplished by implementing a security algorithm to prevent internal attack by addressing Hole 196 Vulnerability of WPA/WPA2. Implemented the symmetric encryption algorithm based on stream ciphers provides confidentiality of the message between the Android Phone and the server.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Kleiner, Carsten</author><author>Disterer, Georg</author></authors></contributors><titles><title>Ensuring Mobile Device Security and Compliance at the Workplace</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>274-281</pages><volume>64</volume><keywords><keyword>Compliance</keyword><keyword>Consumerization</keyword><keyword>Mobile Applications</keyword><keyword>Mobile Device</keyword><keyword>Mobile Device Management</keyword><keyword>Security</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Masson SAS</publisher><isbn>4951192969</isbn><electronic-resource-num>10.1016/j.procs.2015.08.490</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915026253-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2015.08.490</url></web-urls></urls><abstract>End users urgently request using mobile devices at their workplace. They know these devices from their private life and appreciate functionality and usability, and want to benefit from these advantages at work as well. Limitations and restrictions would not be accepted by them. On the contrary, companies are obliged to employ substantial organizational and technical measures to ensure data security and compliance when allowing to use mobile devices at the workplace. So far, only individual arrangements have been presented addressing single issues in ensuring data security and compliance. However, companies need to follow a comprehensive set of measures addressing all relevant aspects of data security and compliance in order to play it safe. Thus, in this paper at first technical architectures for using mobile devices in enterprise IT are reviewed. Thereafter a set of compliance rules is presented and, as major contribution, technical measures are explained that enable a company to integrate mobile devices into enterprise IT while still complying with these rules comprehensively. Depending on the company context, one or more of the technical architectures have to be chosen impacting the specific technical measures for compliance as elaborated in this paper. Altogether this paper, for the first time, correlates technical architectures for using mobile devices at the workplace with technical measures to assure data security and compliance according to a comprehensive set of rules.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Arabo, Abdullahi</author></authors></contributors><titles><title>Cyber Security Challenges within the Connected Home Ecosystem Futures</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>227-232</pages><volume>61</volume><issue>0</issue><keywords><keyword>connected home</keyword><keyword>cyber physical systems</keyword><keyword>cyber security</keyword><keyword>cybercrime</keyword><keyword>mobile malware</keyword><keyword>smart device security</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2015.09.201</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050915030318-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2015.09.201</url></web-urls></urls><abstract>Cybercrime and threats of cyber security is much closer to connected home ecosystems futures that ever been expected. Most of the research effort is focused on the defense mechanisms of cooperate and national infrastructures, not realizing that one of the weakest link in this systems comes from the devices used within connected smart homes of now and the future. The paper forms part of the research to analyze implications and challenges of cybersecurity to smart devices in smart connected homes. We present some related background and motivation seen on the development and demand for seamless interconnectivity of smart devices to provide various functionality and abilities to users. The paper highlights the fact that while these devices provide more features and functionality, they also introduce new risks. Subsequently, current cybersecurity issues related to smart devices within connected homes discussed and analyzed.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Singh, Pooja</author><author>Tiwari, Pankaj</author><author>Singh, Santosh</author></authors></contributors><titles><title>Analysis of Malicious Behavior of Android Apps</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>215-220</pages><volume>79</volume><keywords><keyword>Andoid Security</keyword><keyword>maware apps</keyword><keyword>permissions</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2016.03.028</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916001599-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.03.028</url></web-urls></urls><abstract>As increasing in number of Android phones there is simultaneous increase in mobile malware apps which performs malicious activities such as misusing user's private information as sending messages i.e. SMS, reading users contact information and can harm user by exploiting the user's confidential data which is stored in mobile. Malware are speeded not only infecting the user's data but also harming several organizations in term of stealing of private and confidential data. Hence Malware classification and identification is a critical issue. Android users are unaware about several apps which they are using whether they are malware infected or not. Android applications require the concept of permission mechanism to show that apps are using certain permissions to get access to information from your device. Android apps which are installed in the smart phones get access to all the required permission during installation of apps. Google assure their customer in terms of security about the apps which are available to download from there play store. Android operating system is open system and it allows users to install any applications downloaded from any unsafe site. However permission mechanism is still very diminutive defense mechanism to assure that the applications can harm to user. Therefore in this paper we propose the Malware characterization from manifest file and allows user to improve the efficiency of Android permission to inform user about the risk of Android permission and apps.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rabbani, Mahdi</author><author>Khoshkangini, Reza</author><author>Nagendraswamy, H. S.</author><author>Conti, Mauro</author></authors></contributors><titles><title>Hand Drawn Optical Circuit Recognition</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>41-48</pages><volume>84</volume><keywords><keyword>Optical circuit recognition</keyword><keyword>artificial neural network</keyword><keyword>back propagation algorithm</keyword><keyword>electrical circuit</keyword><keyword>moments of image</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2016.04.064</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916300783-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.04.064</url></web-urls></urls><abstract>Electrical diagram is foundation of studies in electrical science. A circuit diagram convey many information about the system. Behind any device there are plenty of electrical ingredients which perform their specific tasks, today all the electrical software tools failed to effectively convert the information automatically from a circuit image diagram to digital form. Hence electrical engineers should manually enter all information into computers, and this process takes time and bring errors with high probability. Moreover, when the diagram is hand drawn, the problem is more complicated for any electrical analysis. Thus, in this paper we propose a new method using Artificial Neural Network (ANN) to make a machine that can directly read the electrical symbols from a hand drawn circuit image. The recognition process involves two steps: first step is feature extraction using shape based features, and the second one is a classification procedure using ANN through a back propagation algorithm. The ANN was trained and tested with different hand drawn electrical images. The results show that our proposal is viable and brings good performances.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rastogi, Sajal</author><author>Bhushan, Kriti</author><author>Gupta, B. B.</author></authors></contributors><titles><title>Android Applications Repackaging Detection Techniques for Smartphone Devices</title><secondary-title>Physics Procedia</secondary-title></titles><periodical><full-title>Physics Procedia</full-title></periodical><pages>26-32</pages><volume>78</volume><issue>December 2015</issue><keywords><keyword>Android</keyword><keyword>Smartphone security</keyword><keyword>app similarity</keyword><keyword>cloning</keyword><keyword>repackaging</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2016.02.006</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916000089-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.02.006</url></web-urls></urls><abstract>The problem of malwares affecting Smartphones has been widely recognized by the researchers across the world. Majority of these malwares target Android OS. Studies have found that most of the Android malwares hide inside repackaged apps to get inside user devices. Repackaged apps are usually infected versions of popular apps. Adversaries download a popular Android app, and obtain the code using reverse engineering and then add their code (often malicious) to it and repackage and release the app. A number of techniques proposed in research and a number of commercial anti-virus products focus on detecting malwares. This is the traditional approach and requires a signature database. Zero day threats cannot be caught with such methods. There are many techniques which focus entirely on detecting repackaged apps. Since repackaged apps are in the majority among the infected Android apps, they can save the user from a large percentage of Android malwares. Detection and prevention of repackaging is also beneficial for original developer/publisher as they do not incur harm to revenue or reputation. In this paper we study in detail about some of the repackaging detection techniques. Mainly, there are two kinds of techniques - offline and online. They serve different purposes. An offline technique cannot be replaced by an online technique and vice versa. Offline techniques are for direct use of app market owner, whereas online techniques are for direct use of Android users. We study different offline and online techniques. These techniques use different features and metrics to detect similarity of apps and they are representatives of their category of techniques.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Shankar, Venkatesh Gauri</author><author>Somani, Gaurav</author></authors></contributors><titles><title>Anti-Hijack: Runtime Detection of Malware Initiated Hijacking in Android</title><secondary-title>Physics Procedia</secondary-title></titles><periodical><full-title>Physics Procedia</full-title></periodical><pages>587-594</pages><volume>78</volume><issue>December 2015</issue><keywords><keyword>Android malware</keyword><keyword>Anti-Hijack</keyword><keyword>honey-pot</keyword><keyword>intent</keyword><keyword>security</keyword><keyword>smartphone</keyword><keyword>vulnerabilities</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2016.02.105</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916001071-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.02.105</url></web-urls></urls><abstract>According to studies, Android is having the highest market share in smartphone operating systems. The number of Android apps (i.e. applications) are increasing day by day. Consequent threats and attacks on Android are also rising. There are a large number of apps which bypass users by hiding their functionalities and send users sensitive information and data across the network. Due to flexibility and openness of Android operating system, attack surfaces are being introduced every other day. In this paper, we are addressing detection of two fatal malware attacks; intent based hijacking and authenticated session hijacking. We have used the concept of honey-pot in detection of these two authentication hijacking problems. In order to achieve this, we have tested various apps and their interaction with the honey-pot maintained by real device or an emulator. We have designed benign app as a honey framed app. We argue that hijacking malware can be detected with higher accuracy using our method at run-time as compared to the traditional machine learning methods. Our approach, Anti-Hijack, which has provided the detection accuracy as high as 96%. This has been highly accurate to detect the unwanted interaction between hijacking malware and designed benign app. We have tested our approach on a strong data-set of Android apps for experiment and identifying vulnerable points. Our detection method Anti-Hijack is a novel contribution in this area which provides light weight, device operated run-time detection at hijacking malware.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Kavalaris, Stylianos</author><author>Kioupakis, Fragkiskos Emmanouil</author><author>Kaltsas, Konstantinos</author><author>Serrelis, Emmanouil</author></authors></contributors><titles><title>Development of a Multi-Vector Information Security Rating Scale for Smart Devices as a Means for Raising Public InfoSec Awareness</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>500-509</pages><volume>65</volume><issue>Iccmit</issue><keywords><keyword>Information security metrics</keyword><keyword>home and SOHO attack tree</keyword><keyword>information security quantification</keyword><keyword>information security rating</keyword><keyword>public awareness</keyword><keyword>smart devices</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Masson SAS</publisher><isbn>1877-0509</isbn><electronic-resource-num>10.1016/j.procs.2015.09.122</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S187705091502952X-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2015.09.122</url></web-urls></urls><abstract>Vulnerabilities on smart multimedia devices that are made for homes and Small Office Home Offices (SOHO) and their implementation practices, are a pragmatic fact. The broad usage of various devices that operate in home and SOHO environments has introduced a new threat paradigm for consumer platforms and devices, aiming at the secure operation and information of home and SOHO networks. These devices include a wide variety of commercially available technologies required for their operation but also proprietary technologies tailored specifically for those devices. For many manufacturers, usability and user friendliness take precedence over the security on these implementations, leaving home and SOHO networks vulnerable to potential risks that are unknown to consumers or require deep technical knowledge to comprehend them. Poor implementations, along with the inheritance of vulnerabilities that already exist, aggravate these circumstances. This paper aims to construct a measurement method through known vulnerabilities and related attack methods, to provide a scaling system that helps end-users easily understand and be aware of each device's vulnerability level, as well as provide a measurable score to help them compare devices that provide similar or identical services, in the same way this happens with other commodity features, attributes or characteristics.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Stavrou, Angelos</author><author>Voas, Jeffrey</author><author>Karygiannis, Tom</author><author>Quirolgico, Steve</author></authors></contributors><titles><title>Building Security into Off-the-Shelf Smartphones</title><secondary-title>Computer</secondary-title></titles><periodical><full-title>Computer</full-title></periodical><pages>82-84</pages><volume>45</volume><issue>2</issue><keywords><keyword>finer-grained permission model</keyword><keyword>malware</keyword><keyword>mobile appl</keyword></keywords><dates><year>2012</year></dates><electronic-resource-num>10.1109/MC.2012.44</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Building Security into Off-the-Shelf Smartphones.pdf</url></pdf-urls><web-urls><url>http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6155655</url></web-urls></urls><abstract>Quantifying mobile application functionality and enforcing a finer-grained\npermission model would identify and thus thwart a wide range of malware.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Apvrille, Axelle</author></authors></contributors><titles><title>The evolution of mobile malware</title><secondary-title>Computer Fraud and Security</secondary-title></titles><periodical><full-title>Computer Fraud and Security</full-title></periodical><pages>18-20</pages><volume>2014</volume><issue>8</issue><keywords/><dates><year>2014</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/S1361-3723(14)70524-X</electronic-resource-num><urls><pdf-urls><url>internal-pdf://apvrille2014.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/S1361-3723(14)70524-X</url></web-urls></urls><abstract>From Cabir to FakeDefend, the past decade has seen the number of mobile malware threats explode. In 2013, we saw more than 1,300 new malicious applications per day and anti-malware systems are currently tracking over 300 Android malware families and over 400,000 malicious Android applications. © 2014 Elsevier Ltd.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Acharya, Debopam</author><author>Kumar, Vijay</author></authors></contributors><titles><title>Security of MBAN based health records in mobile broadband environment</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>539-545</pages><volume>5</volume><keywords><keyword>EHR</keyword><keyword>EMR</keyword><keyword>Location signature</keyword><keyword>MBAN</keyword><keyword>Mobile WiMAX</keyword><keyword>Mobile healthcare management</keyword><keyword>Security</keyword></keywords><dates><year>2011</year></dates><isbn>1877-0509</isbn><electronic-resource-num>10.1016/j.procs.2011.07.070</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050911003954-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2011.07.070</url></web-urls></urls><abstract>Strong developments in mobile computing and web systems within the last decade have led to their integration in different aspects of our life. This has enabled us to explore new possibilities in the healthcare sector in the form of real time health monitoring and diagnosis systems. Mobile broadband technologies like WiMAX and LTE are being introduced at a rapid pace. This will lead to the development of healthcare systems involving round-the-clock mobile health monitoring, high volume data transmission for remote tests and diagnosis and other real time applications. There are several security issues that should be addressed to enable secured medical data transfer in a mobile broadband environment. In this work, we identify all such security issues and vulnerabilities involving transmission of medical data and propose a security scheme to address some of these issues. © 2011 Published by Elsevier Ltd.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Atkinson, John S.</author><author>Mitchell, John E.</author><author>Rio, Miguel</author><author>Matich, George</author></authors></contributors><titles><title>Your WiFi is leaking: What do your mobile apps gossip about you?</title><secondary-title>Future Generation Computer Systems</secondary-title></titles><periodical><full-title>Future Generation Computer Systems</full-title></periodical><keywords><keyword>Data protection</keyword><keyword>Information inference</keyword><keyword>Mobile apps</keyword><keyword>Privacy</keyword><keyword>Security</keyword><keyword>WiFi</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.future.2016.05.030</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S0167739X16301480-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.future.2016.05.030</url></web-urls></urls><abstract>This paper describes how mobile device apps can inadvertently broadcast personal information through their use of wireless networks despite the correct use of encryption. Using a selection of personas we illustrate how app usage can be tied to personal information. Users would likely assume the confidentiality of personal information (including age, religion, sexuality and gender) when using an encrypted network. However, we demonstrate how encrypted traffic pattern analysis can allow a remote observer to infer potentially sensitive data passively and undetectably without any network credentials.Without the ability to read encrypted WiFi traffic directly, we process the limited side-channel data available (timings and frame sizes) to enable remote app detection. These side-channel data measurements are represented as histograms and used to construct a Random Forest classifier capable of accurately identifying mobile apps from the encrypted traffic they cause. The Random Forest algorithm was able to correctly identify apps with a mean accuracy of . ???99% within the training set.The classifier was then adapted to form the core of a detection program that could monitor multiple devices in real-time. Tests in a closed-world scenario showed 84% accuracy and demonstrated the ability to overcome the data limitations imposed by WiFi encryption. Although accuracy suffers greatly (67%) when moving to an open-world scenario, a high recall rate of 86% demonstrates that apps can unwittingly broadcast personal information openly despite using encrypted WiFi. The open-world false positive rate (38% overall, or 72% for unseen activity alone) leaves much room for improvement but the experiment demonstrates a plausible threat nevertheless.Finally, avenues for improvement and the limitations of this approach are identified. We discuss potential applications, strategies to prevent these leaks, and consider the effort required for an observer to present a practical privacy threat to the everyday WiFi user. This paper presents and demonstrates a nuanced and difficult to solve privacy vulnerability that cannot not be mitigated without considerable changes to current- and next-generation wireless communication protocols.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Alzubaidi, A</author><author>Kalita, J</author></authors></contributors><titles><title>Authentication of Smartphone Users Using Behavioral Biometrics</title><secondary-title>IEEE Communications Surveys Tutorials</secondary-title></titles><periodical><full-title>IEEE Communications Surveys Tutorials</full-title></periodical><pages>1998-2026</pages><volume>18</volume><issue>3</issue><keywords><keyword>behavioural sciences computing</keyword><keyword>biometrics (access</keyword></keywords><dates><year>2016</year></dates><electronic-resource-num>10.1109/COMST.2016.2537748</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Authentication of Smartphone Users Using Behavioral Biometrics.pdf</url></pdf-urls></urls><abstract>Smartphones and tablets have become ubiquitous in our daily lives. Smartphones, in particular, have become more than personal assistants. These devices have provided new avenues for consumers to play, work, and socialize whenever and wherever they want. Smartphones are small in size, so they are easy to handle and to stow and carry in users' pockets or purses. However, mobile devices are also susceptible to various problems. One of the greatest concerns is the possibility of breach in security and privacy if the device is seized by an outside party. It is possible that threats can come from friends as well as strangers. Due to the size of smart devices, they can be easily lost and may expose details of users' private lives. In addition, this might enable pervasive observation or imitation of one's movements and activities, such as sending messages to contacts, accessing private communication, shopping with a credit card, and relaying information about where one has been. This paper highlights the potential risks that occur when smartphones are stolen or seized, discusses the concept of continuous authentication, and analyzes current approaches and mechanisms of behavioral biometrics with respect to methodology, associated datasets and evaluation approaches.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Xue, Yinxing</author><author>Meng, Guozhu</author><author>Liu, Yang</author><author>Tan, Tian Huat</author><author>Chen, Hongxu</author><author>Sun, Jun</author><author>Zhang, Jie</author></authors></contributors><titles><title>Auditing Anti-Malware Tools by Evolving Android Malware and Dynamic Loading Technique</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>1529-1544</pages><volume>12</volume><issue>7</issue><keywords><keyword>Android feature model</keyword><keyword>defense capability</keyword><keyword>dynamic loading</keyword><keyword>linear programming</keyword><keyword>malware generation</keyword></keywords><dates><year>2017</year></dates><electronic-resource-num>10.1109/TIFS.2017.2661723</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Auditing Anti-Malware Tools by Evolving Android Malware and Dynamic Loading Technique.pdf</url></pdf-urls></urls><abstract>—Although a previous study shows that existing Anti-malware tools (AMTs) may have high detection rate, the report is based on existing malware and thus it does not imply that AMTs can effectively deal with future malware. It is desirable to have an alternative way of auditing AMTs. In our previous work, we use malware samples from Android malware collection GENOME to summarize a malware meta-model for modularizing the common attack behaviors and evasion techniques in reusable features. We then combine different features with an evolutionary algorithm, in which way we evolve malware for variants. Previous results have shown that the existing AMTs only exhibit detection rate of 20%-30% for 10,000 evolved malware variants. In this paper, based on the modularized attack features, we apply the dynamic code generation and loading techniques to produce malware so that we can audit the AMTs at runtime. We implement our approach, named MYSTIQUE-S, as a service-oriented malware generation system. MYSTIQUE-S automatically selects attack features under various user scenarios and delivers the corresponding malicious payloads at runtime. Relying on dynamic code binding (via service) and loading (via reflection) techniques, MYSTIQUE-S enables dynamic execution of payloads on user devices at runtime. Experimental results on real-world devices show that existing AMTs are incapable of detecting most of our generated malware. Last, we propose the enhancements for existing AMTs.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Choi, Junho</author><author>Sung, Woon</author><author>Choi, Chang</author><author>Kim, Pankoo</author></authors></contributors><titles><title>Personal information leakage detection method using the inference-based access control model on the Android platform</title><secondary-title>Pervasive and Mobile Computing</secondary-title></titles><periodical><full-title>Pervasive and Mobile Computing</full-title></periodical><pages>138-149</pages><volume>24</volume><keywords><keyword>Access control model</keyword><keyword>Android security</keyword><keyword>Information leakage detection</keyword><keyword>Ontology inference</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.pmcj.2015.06.005</electronic-resource-num><urls><pdf-urls><url>internal-pdf://choi2015.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.pmcj.2015.06.005</url></web-urls></urls><abstract>The web services used on desktop can be accessed through a smartphone due to the development of smart devices. As the usage of smartphones increases, the importance of personal information security inside the smartphone is emphasized. The openness features of Android platform make a lot easier to develop an application and also deploying malicious codes into application is an easy task for hackers. The security practices are also growing rapidly as the number of malicious code increases exponentially. According to these circumstances, new methods for detecting and protecting the behavior of leaked personal information are needed to manage the personal information within a smartphone. In this paper, we study the permission access category in order to detect the malicious code, which discloses the personal information on Android environment such as equipment and location information, address book and messages, and solve the problem related to Resource access of Random Access Control method in conventional Android file system to detect the new malware or malicious code via the context ontology reasoning of permission access and API resource information which the personal information are leaked through. Then we propose an inference-based access control model, which can be enabled to access the proactive security. There is more improvement accuracy than existing malicious detecting techniques and effectiveness of access control model is verified through the proposal of inference-based access control model.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Generic">31</ref-type><contributors><authors><author>Abolfazli, Saeid</author><author>Sanaei, Zohreh</author><author>Ahmed, Ejaz</author><author>Gani, Abdullah</author><author>Buyya, Rajkumar</author></authors></contributors><titles><title>Cloud-based augmentation for mobile devices: Motivation, taxonomies, and open challenges</title><secondary-title>IEEE Communications Surveys and Tutorials</secondary-title></titles><periodical><full-title>IEEE Communications Surveys and Tutorials</full-title></periodical><pages>337-368</pages><volume>16</volume><issue>1</issue><keywords><keyword>Cloud Computing</keyword><keyword>Cloud-based Mobile Augmentation</keyword><keyword>Computation Offloading</keyword><keyword>Computation Outsourcing</keyword><keyword>Mobile Cloud Computing</keyword><keyword>Resource-intensive Mobile Application</keyword></keywords><dates><year>2014</year></dates><isbn>1553-877X</isbn><electronic-resource-num>10.1109/SURV.2013.070813.00285</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Cloud-Based Augmentation for Mobile Devices Motivation- Taxonomies- and Open Challenges.pdf</url></pdf-urls></urls><abstract>Recently, Cloud-based Mobile Augmentation (CMA) approaches have gained remarkable ground from academia and industry. CMA is the state-of-the-art mobile augmentation model that employs resource-rich clouds to increase, enhance, and optimize computing capabilities of mobile devices aiming at execution of resource-intensive mobile applications. Augmented mobile devices envision to perform extensive computations and to store big data beyond their intrinsic capabilities with least footprint and vulnerability. Researchers utilize varied cloud-based computing resources (e.g., distant clouds and nearby mobile nodes) to meet various computing requirements of mobile users. However, employing cloud-based computing resources is not a straightforward panacea. Comprehending critical factors (e.g., current state of mobile client and remote resources) that impact on augmentation process and optimum selection of cloud-based resource types are some challenges that hinder CMA adaptability. This paper comprehensively surveys the mobile augmentation domain and presents taxonomy of CMA approaches. The objectives of this study is to highlight the effects of remote resources on the quality and reliability of augmentation processes and discuss the challenges and opportunities of employing varied cloud-based resources in augmenting mobile devices. We present augmentation definition, motivation, and taxonomy of augmentation types, including traditional and cloud-based. We critically analyze the state-of-the-art CMA approaches and classify them into four groups of distant fixed, proximate fixed, proximate mobile, and hybrid to present a taxonomy. Vital decision making and performance limitation factors that influence on the adoption of CMA approaches are introduced and an exemplary decision making flowchart for future CMA approaches are presented. Impacts of CMA approaches on mobile computing is discussed and open challenges are presented as the future research directions.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Malware, Mobile</author></authors></contributors><titles><title>Colluding Apps :</title></titles><periodical/><pages>77-81</pages><issue>December</issue><keywords/><dates><year>2015</year></dates><urls><pdf-urls><url>internal-pdf://Colluding Apps Tomorrow-s Mobile Malware Threat.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Chen, Wei</author><author>Luo, Xiapu</author><author>Yin, Chengyu</author><author>Xiao, Bin</author><author>Au, Man Ho</author><author>Tang, Yajuan</author></authors></contributors><titles><title>CloudBot: Advanced mobile botnets using ubiquitous cloud technologies</title><secondary-title>Pervasive and Mobile Computing</secondary-title></titles><periodical><full-title>Pervasive and Mobile Computing</full-title></periodical><keywords><keyword>Cloud</keyword><keyword>Command and control</keyword><keyword>Mobile botnet</keyword><keyword>Ubiquitous computing</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.pmcj.2017.03.007</electronic-resource-num><urls><pdf-urls><url>internal-pdf://chen2017.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.pmcj.2017.03.007</url></web-urls></urls><abstract>The mobile botnet is a collection of compromised mobile devices that can remotely receive commands from the botmaster. Exploiting unique features of mobile networks and smartphones, mobile botnets pose a severe threat to mobile users, because smartphones have become an indispensable part of our daily lives and carried a lot of private information. With the development of cloud computing technologies, botmaster can utilize ubiquitous cloud technologies to construct robust and scalable C&amp;C (command and control) channel for mobile botnet. In this paper, we propose Cloudbot, a novel mobile botnet, which outperforms existing mobile botnets in terms of robustness, controllability, scalability, and stealthiness. Although the basic idea of using cloud technologies seems straightforward, we explore the design space of exploiting such services and tackle several challenging issues to overcome the limitations of existing mobile botnets. We have implemented CloudBot by exploiting popular push services and cloud storage services, and evaluated it through extensive experiments. The results demonstrate not only the feasibility of CloudBot but also its advantages, such as stealthiness, robustness, and performance.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Yurur, Ozgur</author><author>Liu, Chi Harold</author><author>Sheng, Zhengguo</author></authors></contributors><titles><title>Context-awareness for mobile sensing : a survey and future directions Article ( Accepted Version ) Context-Awareness for Mobile Sensing : A Survey and Future Directions</title></titles><periodical/><pages>68-93</pages><volume>18</volume><issue>1</issue><keywords/><dates><year>2016</year></dates><electronic-resource-num>10.1109/COMST.2014.2381246</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Context-Awareness for Mobile Sensing A Survey and Future Directions.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Conti, Mauro</author><author>Crispo, Bruno</author><author>Fernandes, Earlence</author><author>Zhauniarovich, Yury</author></authors></contributors><titles><title>CR??PE: A system for enforcing fine-grained context-related policies on android</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>1426-1438</pages><volume>7</volume><issue>5</issue><keywords><keyword>Android security</keyword><keyword>context policy</keyword><keyword>smartphone security</keyword></keywords><dates><year>2012</year></dates><isbn>978-1-5090-0824-7</isbn><electronic-resource-num>10.1109/TIFS.2012.2204249</electronic-resource-num><urls><pdf-urls><url>internal-pdf://CR-PE A System for Enforcing Fine-Grained Context-Related Policies on Android.pdf</url></pdf-urls></urls><abstract>Current smartphone systems allow the user to use only marginally contextual information to specify the behavior of the applications: this hinders the wide adoption of this technology to its full potential. In this paper, we fill this gap by proposing CRêPE, a fine-grained Context-Related Policy Enforcement System for Android. While the concept of context-related access control is not new, this is the first work that brings this concept into the smartphone environment. In particular, in our work, a context can be defined by: the status of variables sensed by physical (low level) sensors, like time and location; additional processing on these data via software (high level) sensors; or particular interactions with the users or third parties. CRêPE allows context-related policies to be set (even at runtime) by both the user and authorized third parties locally (via an application) or remotely (via SMS, MMS, Bluetooth, and QR-code). A thorough set of experiments shows that our full implementation of CRêPE has a negligible overhead in terms of energy consumption, time, and storage, making our system ready for a production environment.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Cui, Baojiang</author><author>Jin, Haifeng</author><author>Carullo, Giuliana</author><author>Liu, Zheli</author></authors></contributors><titles><title>Service-oriented mobile malware detection system based on mining strategies</title><secondary-title>Pervasive and Mobile Computing</secondary-title></titles><periodical><full-title>Pervasive and Mobile Computing</full-title></periodical><pages>101-116</pages><volume>24</volume><keywords><keyword>Contraction clustering</keyword><keyword>Data mining</keyword><keyword>Malware detection</keyword><keyword>Mobile internet</keyword><keyword>SMMDS</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.pmcj.2015.06.006</electronic-resource-num><urls><pdf-urls><url>internal-pdf://cui2015.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.pmcj.2015.06.006</url></web-urls></urls><abstract>The large number of mobile internet users has highlighted the importance of privacy protection. Traditional malware detection systems that run within mobile devices have numerous disadvantages, such as overconsumption of processing resources, delayed updating, and difficulty in intersection. This study proposed a novel detection system based on cloud computing and packet analysis. The system detects the malicious behavior of the mobile malwares through their packets with the useofdata mining methods. This approach completely avoids the defects of traditional methods. The system is service-oriented and can be deployed by mobile operators to send alarms to users who have malwares on their devices. To improve system performance, a new clustering strategy called contraction clustering was created. This strategy uses prior knowledge to reduce dataset size. Moreover, a multi-module detection scheme was introduced to enhance system accuracy. The results of this scheme are produced by integrating the detection results of several algorithms, including Naive Bayes and Decision Tree.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Ning, Huansheng</author><author>Liu, Hong</author><author>Yang, Laurence T</author></authors></contributors><titles><title>Security in</title></titles><periodical/><pages>46-53</pages><issue>July</issue><keywords/><dates><year>2013</year></dates><urls><pdf-urls><url>internal-pdf://Cyberentity Security in the Internet of Things.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Do, Quang</author><author>Martini, Ben</author><author>Choo, Kim Kwang Raymond</author></authors></contributors><titles><title>A Data Exfiltration and Remote Exploitation Attack on Consumer 3D Printers</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>2174-2186</pages><volume>11</volume><issue>10</issue><keywords><keyword>3D printing vulnerabilities</keyword><keyword>data exfiltration</keyword><keyword>remote attack</keyword><keyword>threat model</keyword></keywords><dates><year>2016</year></dates><electronic-resource-num>10.1109/TIFS.2016.2578285</electronic-resource-num><urls><pdf-urls><url>internal-pdf://A Data Exfiltration and Remote Exploitation Attack on Consumer 3D Printers.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Zhang, Tao</author><author>Antunes, Helder</author><author>Aggarwal, Siddhartha</author></authors></contributors><titles><title>Defending connected vehicles against malware: Challenges and a solution framework</title><secondary-title>IEEE Internet of Things Journal</secondary-title></titles><periodical><full-title>IEEE Internet of Things Journal</full-title></periodical><pages>10-21</pages><volume>1</volume><issue>1</issue><keywords><keyword>Antivirus</keyword><keyword>connected cars</keyword><keyword>connected vehicles</keyword><keyword>intelligent transportation system (ITS) malware de</keyword><keyword>security</keyword><keyword>threat defense</keyword><keyword>vehicle communications</keyword><keyword>vehicle networks</keyword><keyword>virus</keyword></keywords><dates><year>2014</year></dates><isbn>2327-4662 VO  - 1</isbn><electronic-resource-num>10.1109/JIOT.2014.2302386</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Defending Connected Vehicles Against Malware Challenges and a Solution Framework.pdf</url></pdf-urls></urls><abstract>Vehicles face growing security threats as they become increasingly connected with the external world. Hackers, researchers, and car hobbyists have compromised security keys used by the electronic control units (ECUs) on vehicles, modified ECU software, and hacked wireless transmissions from vehicle key fobs and tire monitoring sensors, using low-cost commercially available tools. However, the most damaging security threats to vehicles are only emerging. One such threat is malware, which can infect vehicles in a variety of ways and cause severe consequences. Defending vehicles against malware attacks must address many unique challenges that have not been well addressed in other types of networks. This paper identifies those vehicle-specific challenges, discusses existing solutions and their limitations, and presents a cloud-assisted vehicle malware defense framework that can address these challenges.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Derhab, Abdelouahid</author><author>Saleem, Kashif</author><author>Al-Muhtadi, Jalal</author><author>Orgun, Mehmet A.</author></authors></contributors><titles><title>Leveraging adjusted user behavior in the detection and prevention of outgoing malicious SMSs in Android devices</title><secondary-title>Computers in Human Behavior</secondary-title></titles><periodical><full-title>Computers in Human Behavior</full-title></periodical><pages>9-17</pages><volume>59</volume><keywords><keyword>Android</keyword><keyword>Detection</keyword><keyword>Prevention</keyword><keyword>SMS malware</keyword><keyword>Usability</keyword><keyword>User behavior</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Ltd</publisher><isbn>0747-5632</isbn><electronic-resource-num>10.1016/j.chb.2016.01.023</electronic-resource-num><urls><pdf-urls><url>internal-pdf://derhab2016.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.chb.2016.01.023</url></web-urls></urls><abstract>In this paper, we propose OnDroid, a prevention system to defend against outgoing malicious SMSs in Android devices. OnDroid is user-friendly as it considers the user's little understanding of the Android system. It also considers multiple threat scenarios and requires less interaction with the user. For each SMS-sending operation, OnDroid first checks if the mobile device state mismatches the user's behavior. If so, the operation is blocked. Otherwise, it is delayed for a while and the user is notified to confirm or reject the operation. If the SMS is considered normal, the user does not need to take any action and the SMS is sent when the delay expires. Efficiency analysis shows that malicious SMS operations might be missed when the user is unavailable. To deal with this issue, we propose a method by which the user behavior can be adjusted to achieve 100% of malicious SMS prevention. Formal analysis as well as comparative study show that OnDroid offers a good tradeoff between security efficiency and usability.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Xu, Ruzhi</author><author>Wang, R U I</author><author>Guan, Zhitao</author><author>Wu, Longfei</author><author>Wu, J U N</author><author>Du, Xiaojiang</author><author>Member, Senior</author></authors></contributors><titles><title>Achieving Efficient Detection Against False Data Injection Attacks in Smart Grid</title></titles><periodical/><volume>5</volume><keywords/><dates><year>2017</year></dates><electronic-resource-num>10.1109/ACCESS.2017.2728681</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Achieving Efficient Detection Against False Data Injection Attacks in Smart Grid.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Osborn, Emma</author><author>Simpson, Andrew</author></authors></contributors><titles><title>On small-scale IT users' system architectures and cyber security: A UK case study</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>27-50</pages><volume>70</volume><keywords><keyword>Charity</keyword><keyword>Cyber security</keyword><keyword>Home users</keyword><keyword>SME</keyword><keyword>Security architecture</keyword><keyword>Supply chain</keyword><keyword>System architecture</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.05.001</electronic-resource-num><urls><pdf-urls><url>internal-pdf://51.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2017.05.001</url></web-urls></urls><abstract>Despite long-standing predictions that developments in, for example, personal and cloud computing practices would change the ways in which we approach security, small-scale IT users (SSITUs) remain ill-served by existing cyber security practices. Following an extensive study of the adoption of cyber security in UK-based SSITUs, this paper discusses results pertaining to technologies employed by such organisations, with respect to their ability to apply security measures. We determine: that the system architectures employed by SSITUs are significantly different from those employed by large corporate or government entities; that the architecture of a small organisation's digital footprint has far more impact on their overall security than would be the case for a large organisation; and that SSITUs do not hold sufficient influence within the supply chain to manage cyber security in their interactions with service providers. We show that improving small-scale cyber security architectures is not simply about developing new technology; rather, there are additional needs to consider, including technology use in the context of interactions that occur within a broader ecosystem of a supply chain, users with multiple roles, and the impact of the digital footprint on security.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Nissim, Nir</author><author>Cohen, Aviad</author><author>Elovici, Yuval</author></authors></contributors><titles><title>ALDOCX : Detection of Unknown Malicious Microsoft Office Documents Using Designated</title><secondary-title>Ieee Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>Ieee Transactions on Information Forensics and Security</full-title></periodical><pages>631-646</pages><volume>12</volume><issue>3</issue><keywords><keyword>active learning</keyword><keyword>documents</keyword><keyword>docx</keyword><keyword>machine learning</keyword><keyword>malicious</keyword><keyword>malware</keyword><keyword>microsoft office files</keyword><keyword>structural</keyword></keywords><dates><year>2017</year></dates><urls><pdf-urls><url>internal-pdf://ALDOCX Detection of Unknown Malicious Microsoft Office Documents Using Designated Active Learning Methods Based on New Structural Feature Extraction Methodology.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Generic">31</ref-type><contributors><authors><author>Khan, Wazir Zada</author><author>Khan, Muhammad Khurram</author><author>Bin Muhaya, Fahad T.</author><author>Aalsalem, Mohammed Y.</author><author>Chao, Han Chieh</author></authors></contributors><titles><title>A Comprehensive Study of Email Spam Botnet Detection</title><secondary-title>IEEE Communications Surveys and Tutorials</secondary-title></titles><periodical><full-title>IEEE Communications Surveys and Tutorials</full-title></periodical><pages>2271-2295</pages><volume>17</volume><issue>4</issue><keywords><keyword>Email</keyword><keyword>botnet</keyword><keyword>email spam botnet detection</keyword><keyword>spam email</keyword></keywords><dates><year>2015</year></dates><electronic-resource-num>10.1109/COMST.2015.2459015</electronic-resource-num><urls><pdf-urls><url>internal-pdf://A Comprehensive Study of Email Spam Botnet Detection.pdf</url></pdf-urls></urls><abstract>The problem of email spam has grown significantly over the past few years. It is not just a nuisance for users but also it is damaging for those who fall for scams and other attacks. This is due to the complexity intensification of email spamming techniques which are advancing from traditional spamming (direct spamming) techniques to a more scalable, elusive and indirect approach of botnets for distributing email spam messages. In this paper, we first discuss the sources and architectures used by the spamming botnets for sending massive amount of email spam. Then we present detailed chronicles of spamming botnets which systematically describes the timeline of events and notable occurrences in the advancement of these spamming botnets. This paper also aims to represent a comprehensive analysis of particular email spamming botnet detection techniques proposed in the literature. We attempt to categorize them according to both their nature of defense and method of detection, also revealing and comparing their advantages and disadvantages extensively. We also present a qualitative analysis of these techniques. Finally, we summarize the future trends and challenges in detecting email spamming botnets.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Gui, Xiaolin</author><author>Liu, Jun</author><author>Chi, Mucong</author><author>Li, Chenyu</author><author>Lei, Zhenming</author></authors></contributors><titles><title>$ Qdo \ Vlv Ri 0Dozduh $ Ssolfdwlrq % Dvhg Rq 0Dvvlyh 1Hwzrun 7Ud ෈ F</title></titles><periodical/><pages>209-221</pages><issue>August</issue><keywords><keyword>big data</keyword><keyword>dssolfdwlrqv lghqwl</keyword><keyword>fdwlrq</keyword><keyword>network secu-</keyword><keyword>ulw</keyword><keyword>xcodeghost</keyword></keywords><dates><year>2016</year></dates><urls><pdf-urls><url>internal-pdf://Analysis of malware application based on massive network traffic.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Khattak, Sheharbano</author><author>Ramay, Naurin Rasheed</author><author>Khan, Kamran Riaz</author><author>Syed, Affan A.</author><author>Khayam, Syed Ali</author></authors></contributors><titles><title>A Taxonomy of botnet behavior, detection, and defense</title><secondary-title>IEEE Communications Surveys and Tutorials</secondary-title></titles><periodical><full-title>IEEE Communications Surveys and Tutorials</full-title></periodical><pages>898-924</pages><volume>16</volume><issue>2</issue><keywords><keyword>C&amp;C</keyword><keyword>DDoS</keyword><keyword>DNS flux</keyword><keyword>IP flux</keyword><keyword>bot</keyword><keyword>bot family</keyword><keyword>botmaster</keyword><keyword>botnet</keyword><keyword>complex event processing</keyword><keyword>cyberfraud</keyword><keyword>cyberwarfare</keyword><keyword>fast flux service network</keyword><keyword>spam</keyword><keyword>spambot</keyword><keyword>stepping-stone</keyword></keywords><dates><year>2014</year></dates><isbn>1553-877X</isbn><electronic-resource-num>10.1109/SURV.2013.091213.00134</electronic-resource-num><urls><pdf-urls><url>internal-pdf://A Taxonomy of Botnet Behavior- Detection- and Defense.pdf</url></pdf-urls></urls><abstract>A number of detection and defense mechanisms have emerged in the last decade to tackle the botnet phenomenon. It is important to organize this knowledge to better understand the botnet problem and its solution space. In this paper, we structure existing botnet literature into three comprehensive taxonomies of botnet behavioral features, detection and defenses. This elevated view highlights opportunities for network defense by revealing shortcomings in existing approaches. We introduce the notion of a dimension to denote different criteria which can be used to classify botnet detection techniques. We demonstrate that classification by dimensions is particularly useful for evaluating botnet detection mechanisms through various metrics of interest. We also show how botnet behavioral features from the first taxonomy affect the accuracy of the detection approaches in the second taxonomy. This information can be used to devise integrated detection strategies by combining complementary approaches. To provide real-world context, we liberally augment our discussions with relevant examples from security research and products.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Penetration, Malware</author><author>Faruki, Parvez</author><author>Bharmal, Ammar</author><author>Laxmi, Vijay</author><author>Ganmoor, Vijay</author><author>Gaur, Manoj Singh</author></authors></contributors><titles><title>Android Security : A Survey of Issues ,</title></titles><periodical/><pages>998-1022</pages><volume>17</volume><issue>2</issue><keywords/><dates><year>2015</year></dates><urls><pdf-urls><url>internal-pdf://Android Security A Survey of Issues- Malware Penetration- and Defenses.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Kwon, Taekyoung</author><author>Hong, Jin</author></authors></contributors><titles><title>Analysis and improvement of a PIN-Entry method resilient to shoulder-surfing and recording attacks</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>278-292</pages><volume>10</volume><issue>2</issue><keywords><keyword>PIN</keyword><keyword>authentication</keyword><keyword>shoulder-surfing</keyword></keywords><dates><year>2015</year></dates><electronic-resource-num>10.1109/TIFS.2014.2374352</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Analysis and Improvement of a PIN-Entry Method Resilient to Shoulder-Surfing and Recording Attacks.pdf</url></pdf-urls></urls><abstract>Devising a user authentication scheme based on personal identification numbers (PINs) that is both secure and practically usable is a challenging problem. The greatest difficulty lies with the susceptibility of the PIN entry process to direct observational attacks, such as human shoulder-surfing and camera-based recording. This paper starts with an examination of a previous attempt at solving the PIN entry problem, which was based on an elegant adaptive black-and-white coloring of the 10-digit keypad in the standard layout. Even though the method required uncomfortably many user inputs, it had the merit of being easy to understand and use. Our analysis that takes both the experimental and theoretical approaches reveals multiple serious shortcomings of the previous method, including round redundancy, unbalanced key presses, highly frequent system errors, and insufficient resilience to recording attacks. The lessons learned through our analysis are then used to improve the black-and-white PIN entry scheme. The new scheme has the remarkable property of resisting camera-based recording attacks over an unlimited number of authentication sessions without leaking any of the PIN digits.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Amrutkar, Chaitrali</author><author>Traynor, Patrick</author><author>Oorschot, Paul C. van</author></authors></contributors><titles><title>An Empirical Evaluation of SSL Indicators in Mobile Web Browsers</title><secondary-title>Georgia Tech tech report GT-CS-11-10</secondary-title></titles><periodical><full-title>Georgia Tech tech report GT-CS-11-10</full-title></periodical><pages>889-903</pages><volume>14</volume><issue>5</issue><keywords/><dates><year>2011</year></dates><electronic-resource-num>10.1109/TMC.2013.90</electronic-resource-num><urls><pdf-urls><url>internal-pdf://An Empirical Evaluation of Security Indicators in Mobile Web Browsers.pdf</url></pdf-urls></urls><abstract>Mobile browsers are increasingly being relied upon to perform security sensitive operations. Like their desktop counterparts, these applications can enable SSL/TLS to provide strong security guarantees for communications over the web. However, the drastic reduction in screen size and the accompanying reorganization of screen real estate significantly changes the use and consistency of the security indicators and certificate information that alert users of site identity and the presence of strong cryptographic algorithms. In this paper, we perform the first measurement of the state of critical security indi- cators in mobile browsers. We evaluate ten mobile and two tablet browsers, representing over 90% of the market share, using the recommended guidelines for web user interface to convey security set forth by theWorldWide Web Consortium (W3C). While desktop browsers follow the majority of guidelines, our analysis shows that mo- bile browsers fall significantly short. We also observe no- table inconsistencies across mobile browsers when such mechanisms actually are implemented. Finally, we use this evidence to argue that the combination of reduced screen space and an independent selection of security in- dicators not only make it difficult for experts to deter- mine the security standing of mobile browsers, but actu- ally make mobile browsing more dangerous for average users as they provide a false sense of security. 1</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Hsu, Fu Hau</author><author>Wu, Min Hao</author><author>Tso, Chang Kuo</author><author>Hsu, Chi Hsien</author><author>Chen, Chieh Wen</author></authors></contributors><titles><title>Antivirus software shield against antivirus terminators</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>1439-1447</pages><volume>7</volume><issue>5</issue><keywords><keyword>API hooking</keyword><keyword>Antivirus software</keyword><keyword>malware</keyword></keywords><dates><year>2012</year></dates><electronic-resource-num>10.1109/TIFS.2012.2206028</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Antivirus Software Shield Against Antivirus Terminators.pdf</url></pdf-urls></urls><abstract>In the last several decades, the arms race between malware writers and antivirus programmers has become more and more severe. The simplest way for a computer user to secure his computer is to install antivirus software on his computer. As antivirus software becomes more sophisticated and powerful, evading the detection of antivirus software becomes an important part of malware. As a result, malware writers have developed various approaches to increase the survivability and concealment of their malware. One of these technologies is to terminate antivirus software right after the execution of the malware. In this paper, we propose a mechanism, called ANtivirus Software Shield (ANSS), to prevent antivirus software from being terminated without the consciousness of the antivirus software users. ANSS uses System Service Descriptor Table (SSDT) hooking to intercept specific Windows APIs and analyzes them to filter out hazardous API calls that will terminate antivirus software. When using several pieces of malware that can terminate various brands of antivirus applications to make our experiments, the results show that ANSS can protect antivirus software from being terminated by them with at most 0.42% CPU performance overhead and 1.77% memory write performance overhead.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Shabtai, A.</author><author>Tenenboim-Chekina, L.</author><author>Mimran, D.</author><author>Rokach, L.</author><author>Shapira, B.</author><author>Elovici, Y.</author></authors></contributors><titles><title>Mobile malware detection through analysis of deviations in application network behavior</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>1-18</pages><volume>43</volume><keywords><keyword>Android malware</keyword><keyword>Anomaly detection</keyword><keyword>Machine learning</keyword><keyword>Mobile applications</keyword><keyword>Network traffic</keyword><keyword>Smartphone security</keyword></keywords><dates><year>2014</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2014.02.009</electronic-resource-num><urls><pdf-urls><url>internal-pdf://16.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2014.02.009</url></web-urls></urls><abstract>In this paper we present a new behavior-based anomaly detection system for detecting meaningful deviations in a mobile application's network behavior. The main goal of the proposed system is to protect mobile device users and cellular infrastructure companies from malicious applications by: (1) identification of malicious attacks or masquerading applications installed on a mobile device, and (2) identification of republished popular applications injected with a malicious code (i.e., repackaging). More specifically, we attempt to detect a new type of mobile malware with self-updating capabilities that were recently found on the official Google Android marketplace. Malware of this type cannot be detected using the standard signatures approach or by applying regular static or dynamic analysis methods. The detection is performed based on the application's network traffic patterns only. For each application, a model representing its specific traffic pattern is learned locally (i.e., on the device). Semi-supervised machine-learning methods are used for learning the normal behavioral patterns and for detecting deviations from the application's expected behavior. These methods were implemented and evaluated on Android devices. The evaluation experiments demonstrate that: (1) various applications have specific network traffic patterns and certain application categories can be distinguished by their network patterns; (2) different levels of deviation from normal behavior can be detected accurately; (3) in the case of self-updating malware, original (benign) and infected versions of an application have different and distinguishable network traffic patterns that in most cases, can be detected within a few minutes after the malware is executed while presenting very low false alarms rate; and (4) local learning is feasible and has a low performance overhead on mobile devices. © 2014 Elsevier Ltd. All rights reserved.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rashidi, Bahman</author><author>Fung, Carol</author><author>Bertino, Elisa</author></authors></contributors><titles><title>Android resource usage risk assessment using hidden Markov model and online learning</title><secondary-title>Computers &amp; Security</secondary-title></titles><periodical><full-title>Computers &amp; Security</full-title></periodical><pages>90-107</pages><volume>65</volume><keywords/><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2016.11.006</electronic-resource-num><urls><pdf-urls><url>internal-pdf://13.pdf</url></pdf-urls><web-urls><url>http://linkinghub.elsevier.com/retrieve/pii/S0167404816301596</url></web-urls></urls><abstract>With Android devices users are allowed to install third-party applications from various open markets. This raises security and privacy concerns since the third-party applications may be malicious. Unfortunately, the increasing sophistication and diversity of the malicious Android applications render the conventional defenses techniques ineffective, which results in a large number of malicious applications to remain undetected. In this paper we present XDroid, an Android application and resource risk assessment framework based on the Hidden Markov Model (HMM). In our approach, we first map the applications' behaviors into an observation set, and we attach timestamps to some observations in the set. We show that our novel use of temporal behavior tracking can significantly improve the malware detection accuracy, and that the HMM can generate security alerts when suspicious behaviors are detected. Furthermore, we introduce an online learning model to integrate the input from users and provide adaptive risk assessment. We evaluate our model through a set of experiments on the DREBIN benchmark malware dataset. Our evaluation results demonstrate that the proposed model can accurately assess the risk levels of malicious applications and provide adaptive risk assessment based on user input.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Mao, Weixuan</author><author>Cai, Zhongmin</author><author>Towsley, Don</author><author>Feng, Qian</author><author>Guan, Xiaohong</author></authors></contributors><titles><title>Security importance assessment for system objects and malware detection</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>47-68</pages><volume>68</volume><keywords><keyword>Access behavior</keyword><keyword>Behavioral-based detection</keyword><keyword>Importance metric</keyword><keyword>Malware detection</keyword><keyword>Security dependency network</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.02.009</electronic-resource-num><urls><pdf-urls><url>internal-pdf://15.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2017.02.009</url></web-urls></urls><abstract>System objects play different roles in computer systems and exhibit different levels of importance to system security. Assessing the importance of system objects helps us develop effective security protection methods. However, little work has focused on understanding and assessing the importance of system objects from a security perspective. In this paper, we build a security dependency network from access behaviors to quantify the security importance of system objects from a system-wide perspective. Similar to other networked systems, we observe small-world effect and power-law distributions for in- and out-degree in the security dependency network. Exploring rich network structures in the security dependency network provides insights into the importance of system objects in security. We assess the importance of system objects, with respect to security, by the centrality metrics and propose an importance based model for malware detection. We evaluate importance metrics of system objects from various perspectives to demonstrate their feasibility and practicality. Furthermore, extensive experimental results on a real-world dataset demonstrate that our model is capable of detecting 7257 malware samples from 27,840 benign processes with a 93.92% true positive rate at 0.1% false positive rate.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Dai, Ting</author><author>Li, Xiaolei</author><author>Hassanshahi, Behnaz</author><author>Yap, Roland H.C.</author><author>Liang, Zhenkai</author></authors></contributors><titles><title>ROPPDROID: Robust permission re-delegation prevention in Android inter-component communication</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>98-111</pages><volume>68</volume><keywords><keyword>Android</keyword><keyword>Inter-component communication</keyword><keyword>Permission re-delegation</keyword><keyword>Privilege escalation</keyword><keyword>Resource virtualization</keyword><keyword>Security</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.04.002</electronic-resource-num><urls><pdf-urls><url>internal-pdf://20.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2017.04.002</url></web-urls></urls><abstract>Android is designed such that Android applications (Apps) can provide functions to each other by providing a complex inter-component communication (ICC) model. While app interactions make it convenient and easy for one app to delegate functionality to another app, it also leads to permission re-delegation among Android apps which can cause privilege escalation. One approach taken by existing work tries to mitigate privilege escalation by enforcing tightened permissions. Unfortunately, preventing privilege escalation often renders the recipient apps unusable (for example, causing the app to crash). In this work, we propose another approach to address the privilege escalation problem from Android app ICC which intends to better preserve app functionality. We propose a context specific resource virtualization to eliminate privilege escalation by taking into account the interaction of ICCs among apps. We evaluated our prototype system, ROPPDROID, on real-world Android apps and showed the effectiveness in providing robust protection for those apps. Our prototype also has low performance overheads.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Geneiatakis, Dimitris</author><author>Fovino, Igor Nai</author><author>Kounelis, Ioannis</author><author>Stirparo, Paquale</author></authors></contributors><titles><title>A Permission verification approach for android mobile applications</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>192-205</pages><volume>49</volume><keywords><keyword>Android</keyword><keyword>Instrumentation</keyword><keyword>Permissions</keyword><keyword>Privacy</keyword><keyword>Risk assessment</keyword><keyword>Security</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2014.10.005</electronic-resource-num><urls><pdf-urls><url>internal-pdf://21.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2014.10.005</url></web-urls></urls><abstract>Mobile applications build part of their security and privacy on a declarative permission model. In this approach mobile applications, to get access to sensitive resources, have to define the corresponding permissions in a manifest. However, mobile applications may request access to permissions that they do not require for their execution (over-privileges) and offer opportunities to malicious software to gain access to otherwise inaccessible resources. In this paper, we investigate on the declarative permissions model on which security and privacy services of Android rely upon. We propose a practical and efficient permission certification technique, in the direction of risk management assessment. We combine both runtime information and static analysis to profile mobile applications and identify if they are over-privileged or follow the least privilege principle. We demonstrate a transparent solution that neither requires modification to the underlying framework, nor access to the applications' original source code. We assess the effectiveness of our approach, using a randomly selected varied set of mobile applications. Results show that our approach can accurately identify whether an application is over-privileged or not, whilst at the same time guaranteeing the need of declaring specific permissions in the manifest.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Do, Quang</author><author>Martini, Ben</author><author>Choo, Kim Kwang Raymond</author></authors></contributors><titles><title>Exfiltrating data from Android devices</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>74-91</pages><volume>48</volume><keywords><keyword>Android</keyword><keyword>Code injection</keyword><keyword>Covert exfiltration</keyword><keyword>Data exfiltration</keyword><keyword>Inaudible transmission</keyword><keyword>Mobile adversary model</keyword><keyword>Reverse engineering</keyword><keyword>SMALI</keyword><keyword>SMS transmission</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2014.10.016</electronic-resource-num><urls><pdf-urls><url>internal-pdf://18.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2014.10.016</url></web-urls></urls><abstract>Modern mobile devices have security capabilities built into the native operating system, which are generally designed to ensure the security of personal or corporate data stored on the device, both at rest and in transit. In recent times, there has been interest from researchers and governments in securing as well as exfiltrating data stored on such devices (e.g. the high profile PRISM program involving the US Government). In this paper, we propose an adversary model for Android covert data exfiltration, and demonstrate how it can be used to construct a mobile data exfiltration technique (MDET) to covertly exfiltrate data from Android devices. Two proof-of-concepts were implemented to demonstrate the feasibility of exfiltrating data via SMS and inaudible audio transmission using standard mobile devices.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Armando, Alessandro</author><author>Merlo, Alessio</author><author>Migliardi, Mauro</author><author>Verderame, Luca</author></authors></contributors><titles><title>Breaking and fixing the Android Launching Flow</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>104-115</pages><volume>39</volume><issue>PARTA</issue><keywords><keyword>Android OS</keyword><keyword>Android security</keyword><keyword>Android security framework</keyword><keyword>Denial-of-Service</keyword><keyword>Zygote vulnerability</keyword></keywords><dates><year>2013</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2013.03.009</electronic-resource-num><urls><pdf-urls><url>internal-pdf://19.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2013.03.009</url></web-urls></urls><abstract>The security model of the Android OS is based on the effective combination of a number of well-known security mechanisms (e.g. statically defined permissions for applications, the isolation offered by the Dalvik Virtual Machine, and the well-known Linux discretionary access control model). Although each security mechanism has been extensively tested and proved to be effective in isolation, their combination may suffer from unexpected security flaws. We show that this is actually the case by presenting a severe vulnerability in Android related to the application launching flow. This vulnerability is based on a security flaw affecting a kernel-level socket (namely, the Zygote socket). We also present an exploit of the vulnerability that allows a malicious application to mount a severe Denial-of-Service attack that makes the Android devices become totally unresponsive. Besides explaining the vulnerability (which affects all versions of Android up to version 4.0.3) we propose two fixes. One of the two fixes has been adopted in the official release of Android, starting with version 4.1. We empirically assess the impact of the vulnerability as well as the efficacy of the countermeasures on the end user. We conclude by extending our security analysis to the whole set of sockets, showing that other sockets do not suffer from the same vulnerability as the Zygote one. © 2013 Elsevier Ltd. All rights reserved.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Li, Jin</author><author>Zhang, Yinghui</author><author>Chen, Xiaofeng</author><author>Xiang, Yang</author></authors></contributors><titles><title>Secure attribute-based data sharing for resource-limited users in cloud computing</title><secondary-title>Computers &amp; Security</secondary-title></titles><periodical><full-title>Computers &amp; Security</full-title></periodical><keywords/><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.08.007</electronic-resource-num><urls><pdf-urls><url>internal-pdf://49.pdf</url></pdf-urls><web-urls><url>http://linkinghub.elsevier.com/retrieve/pii/S0167404817301621</url></web-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Ntantogian, Christoforos</author><author>Apostolopoulos, Dimitris</author><author>Marinakis, Giannis</author><author>Xenakis, Christos</author></authors></contributors><titles><title>Evaluating the privacy of Android mobile applications under forensic analysis</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>66-76</pages><volume>42</volume><keywords><keyword>Android</keyword><keyword>Authentication credentials</keyword><keyword>Memory dump</keyword><keyword>Mobile applications</keyword><keyword>Mobile forensics</keyword><keyword>Privacy of mobile applications</keyword><keyword>Volatile memory</keyword></keywords><dates><year>2014</year></dates><publisher>Elsevier Ltd</publisher><isbn>2104142776</isbn><electronic-resource-num>10.1016/j.cose.2014.01.004</electronic-resource-num><urls><pdf-urls><url>internal-pdf://24.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2014.01.004</url></web-urls></urls><abstract>In this paper, we investigate and evaluate through experimental analysis the possibility of recovering authentication credentials of mobile applications from the volatile memory of Android mobile devices. Throughout the carried experiments and analysis, we have, exclusively, used open-source and free forensic tools. Overall, the contribution of this paper is threefold. First, it thoroughly, examines thirteen (13) mobile applications, which represent four common application categories that elaborate sensitive users' data, whether it is possible to recover authentication credentials from the physical memory of mobile devices, following thirty (30) different scenarios. Second, it explores in the considered applications, if we can discover patterns and expressions that indicate the exact position of authentication credentials in a memory dump. Third, it reveals a set of critical observations regarding the privacy of Android mobile applications and devices. ?? 2013 Elsevier B.V. All rights reserved.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Virvilis, Nikos</author><author>Mylonas, Alexios</author><author>Tsalis, Nikolaos</author><author>Gritzalis, Dimitris</author></authors></contributors><titles><title>Security Busters: Web browser security vs. rogue sites</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>90-105</pages><volume>52</volume><keywords><keyword>Android</keyword><keyword>Malware</keyword><keyword>Mobile device</keyword><keyword>Phishing</keyword><keyword>Security</keyword><keyword>Smartphone</keyword><keyword>Web browser</keyword><keyword>Windows</keyword><keyword>iOS</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2015.04.009</electronic-resource-num><urls><pdf-urls><url>internal-pdf://25.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2015.04.009</url></web-urls></urls><abstract>URL blacklists are used by the majority of modern web browsers as a means to protect users from rogue web sites, i.e. those serving malware and/or hosting phishing scams. There is a plethora of URL blacklists/reputation services, out of which Google's Safe Browsing and Microsoft's SmartScreen stand out as the two most commonly used ones. Frequently, such lists are the only safeguard web browsers implement against such threats. In this paper, we examine the level of protection that is offered by popular web browsers on iOS, Android and desktop (Windows) platforms, against a large set of phishing and malicious URL. The results reveal that most browsers - especially those for mobile devices - offer limited protection against such threats. As a result, we propose and evaluate a countermeasure, which can be used to significantly improve the level of protection offered to the users, regardless of the web browser or platform they are using.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Dang-Pham, Duy</author><author>Pittayachawan, Siddhi</author></authors></contributors><titles><title>Comparing intention to avoid malware across contexts in a BYOD-enabled Australian university: A Protection Motivation Theory approach</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>281-297</pages><volume>48</volume><keywords><keyword>BYOD</keyword><keyword>Bayesian structural equation modelling</keyword><keyword>Information security behaviour</keyword><keyword>Malware</keyword><keyword>Protection Motivation Theory</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Ltd</publisher><isbn>4025594390</isbn><accession-num>24893311</accession-num><electronic-resource-num>10.1016/j.cose.2014.11.002</electronic-resource-num><urls><pdf-urls><url>internal-pdf://22.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2014.11.002</url></web-urls></urls><abstract>Malware have been regarded as a persistent threat to both individuals and organisations due to its wide spread via various means of infection. With the increasing use of personal mobile devices and the trending adoption of Bring Your Own Device (BYOD) practices, this threat has become even more versatile and dreadful as it could hide behind the users' typical and daily Internet activities. The importance of investigating whether the user's intention to perform malware avoidance behaviours would change across multiple contexts is emphasised. Consequently, this study determines the contributing factors and compares their impacts on such intention by extending Protection Motivation Theory in two different contexts. A total of 252 Australian higher education students were surveyed when using mobile devices such as smartphone, laptop and tablet at home and at a BYOD-enabled university. Paired t-test, Bayesian structural equation modelling, and revised z-test were employed for data analysis. The empirical findings reveal that intention to perform malware avoidance behaviours differed across the contexts. Furthermore, the researchers found perceptions of self-efficacy and vulnerability to have different impacts on such intention and other variables in the model. As a result, such findings suggested developing community of practice and repeated trainings to maintain the users' confidence in their own abilities to cope with malware threats. Message that focuses on the threats' consequences was suggested to improve home users' intention to avoid malware, along with a number of factors that could be critical to designing information security education programs. Moreover, these implications particularly address information security management at educational institutions that adopt BYOD policy. Finally, theoretical contributions include an extended model based on Protection Motivation Theory that reflects the users' intention to avoid malware threats in BYOD context, from which directions for future research were also provided.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Lin, Ying Dar</author><author>Lai, Yuan Cheng</author><author>Chen, Chien Hung</author><author>Tsai, Hao Chuan</author></authors></contributors><titles><title>Identifying android malicious repackaged applications by thread-grained system call sequences</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>340-350</pages><volume>39</volume><issue>PART B</issue><keywords><keyword>Android</keyword><keyword>Dynamic analysis</keyword><keyword>Longest common substring</keyword><keyword>Malicious repackaged applications</keyword><keyword>System call</keyword></keywords><dates><year>2013</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><accession-num>329007400017</accession-num><electronic-resource-num>10.1016/j.cose.2013.08.010</electronic-resource-num><urls><pdf-urls><url>internal-pdf://23.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2013.08.010</url></web-urls></urls><abstract>Android security has become highly desirable since adversaries can easily repackage malicious codes into various benign applications and spread these malicious repackaged applications (MRAs). Most MRA detection mechanisms on Android focus on detecting a specific family of MRAs or requiring the original benign application to compare with the malicious ones. This work proposes a new mechanism, SCSdroid (System Call Sequence Droid), which adopts the thread-grained system call sequences activated by applications. The concept is that even if MRAs can be camouflaged as benign applications, their malicious behavior would still appear in the system call sequences. SCSdroid extracts the truly malicious common subsequences from the system call sequences of MRAs belonging to the same family. Therefore, these extracted common subsequences can be used to identify any evaluated application without requiring the original benign application. Experimental results show that SCSdroid falsely detected only two applications among 100 evaluated benign applications, and falsely detected only one application among 49 evaluated malicious applications. As a result, SCSdroid achieved up to 95.97% detection accuracy, i.e., 143 correct detections among 149 applications. ?? 2012 Elsevier B.V. All rights reserved.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Silic, Mario</author><author>Back, Andrea</author></authors></contributors><titles><title>Shadow IT - A view from behind the curtain</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>274-283</pages><volume>45</volume><keywords><keyword>Information security</keyword><keyword>Organisational IT</keyword><keyword>Shadow IT</keyword><keyword>Shadow systems</keyword><keyword>Software</keyword></keywords><dates><year>2014</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2014.06.007</electronic-resource-num><urls><pdf-urls><url>internal-pdf://50.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2014.06.007</url></web-urls></urls><abstract>Shadow IT is a currently misunderstood and relatively unexplored phenomena. It represents all hardware, software, or any other solutions used by employees inside of the organisational ecosystem which have not received any formal IT department approval. But how much do we know about this phenomenon? What is behind the curtain? Is security in organisations jeopardised? In the research study reported here, we conducted an in-depth analysis of the organisational Shadow IT software database, reporting the view from behind the curtain. The study used triangulation approach to investigate the Shadow IT phenomena and its findings open Pandora's Box as they lay a new picture of what Shadow IT looks like from the software perspective. Our study revealed that greynet, content apps, and utility tools are the most used shadow systems. This study offers important insights on the Shadow IT phenomena for information management professionals and provides new research directions for academia. © 2014 Elsevier Ltd. All rights reserved.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Abualola, Huda</author><author>Alhawai, Hessa</author><author>Kadadha, Maha</author><author>Otrok, Hadi</author><author>Mourad, Azzam</author></authors></contributors><titles><title>An Android-based Trojan Spyware to Study the NotificationListener Service Vulnerability</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>465-471</pages><volume>83</volume><issue>Ant</issue><keywords><keyword>Android</keyword><keyword>Mobile spy</keyword><keyword>Notification</keyword><keyword>Spyware</keyword><keyword>Trojan</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><electronic-resource-num>10.1016/j.procs.2016.04.210</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916302435-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.04.210</url></web-urls></urls><abstract>Security attacks continue to emerge on daily basis due to the fast growth in the number of smart devices and mobile applications. Attacks take different malware forms such as Spyware and Trojan exploiting different operating system vulnerabilities, specially the well known vulnerable operating system; Android OS. In this paper, we study the malicious use of the &quot;NotificationListener&quot; service in Android 4.3 and 5.0. A Trojan application, known as SMS backup, is developed to spy the notifications of other applications. Such an application requires only two permissions that include &quot;Notification Access&quot; and &quot;Internet&quot;. These permissions are used to extract and send user's messages of other applications to the attacker's email through Internet. Our malware is able to alter and/or delete the notification before being displayed. For experimental results, the malware was tested against notifications of WhatsApp, BBM, SMS, and Facebook messenger using different Android versions including Lollipop 5.0. Experiments show that our malware succeeded against all the tested applications running Android version 4.3. Moreover, BBM and SMS messages are still extractable in the newer version of Android (Lollipop 5.0).</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>McNeil, Paul</author><author>Shetty, Sachin</author><author>Guntu, Divya</author><author>Barve, Gauree</author></authors></contributors><titles><title>SCREDENT: Scalable Real-time Anomalies Detection and Notification of Targeted Malware in Mobile Devices</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>1219-1225</pages><volume>83</volume><keywords><keyword>Android</keyword><keyword>Big Data</keyword><keyword>Cloud Computing</keyword><keyword>Container Technology</keyword><keyword>Data Analytics</keyword><keyword>Dynamic Analysis</keyword><keyword>Location-Based Notification</keyword><keyword>Machine Learning</keyword><keyword>Malware</keyword><keyword>Mobile Malware Detection</keyword><keyword>Mobile Security</keyword><keyword>Modeling</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><isbn>9781369136883</isbn><electronic-resource-num>10.1016/j.procs.2016.04.254</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916302873-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.04.254</url></web-urls></urls><abstract>The ubiquitous availability of Android devices has led to increasing malicious mobile attacks targeting the Android mobile operating system. In recent times, adversaries leverage situational awareness, user and device context to create targeted malware for mobile devices. Several mobile security tools such as Mobile Sandbox, TargetDroid, and ANANAS focus on tailoring the detection schemes for individual users and suffer from scalability by analyzing individual user's activities. To the best of our knowledge, these tools do not incorporate user group profiling in their automated user-behavior driven dynamic analysis. In addition, adaptive and location-based alerts are not provided to mobile users. We propose SCREDENT: Scalable Real-time Anomalies Detection and Notification of Targeted Malware in Mobile Devices, to provide a scalable system to classify, detect, and predict targeted malware in real-time. SCREDENT incorporates behavior-triggering probabilistic models and user grouping to minimize the number of parallel dynamic analysis instances needed. SCREDENT leverages container technology to perform dynamic analysis and allow for modularity as emulation technology improves. SCREDENT uses adaptive, location-based notification principles to create a geographical fence which warn users of malicious attacks. Finally, SCREDENT provides proactive, adaptive alerts to individual users if at least one of the group members has triggered malicious activities in an application currently used by the individual.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Morgado, Inês Coimbra</author><author>Paiva, Ana C.R.</author></authors></contributors><titles><title>Impact of Execution Modes on Finding Android Failures</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>284-291</pages><volume>83</volume><issue>Ant</issue><keywords><keyword>Android</keyword><keyword>Case Study</keyword><keyword>Mobile Testing</keyword><keyword>Reverse Engineering</keyword><keyword>Test Automation</keyword><keyword>UI Patterns</keyword></keywords><dates><year>2016</year></dates><electronic-resource-num>10.1016/j.procs.2016.04.127</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916301508-main.pdf</url></pdf-urls></urls><abstract>The iMPAcT tool combines the benefits of existing user recurring behaviour (User Interface Patterns) on mobile applications to facilitate the test automation of Android mobile applications. It uses an automatic exploration process combined with reverse engineering to identify the existing user interface patterns on a mobile application and then tests those patterns with generic test strategies (designated Test Patterns). The Test Patterns are defined in a catalogue that can be reused for testing other applications. However the results obtained by the iMPAcT tool depend on the exploration mode and on the order in which the test strategies are applied. This paper describes an experiment conducted to evaluate the impact of using different exploration modes and of changing the order by which UI patterns are searched and subsequently tested on the failures found and on the number of events fired.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Martinelli, Fabio</author><author>Marulli, Fiammetta</author><author>Mercaldo, Francesco</author></authors></contributors><titles><title>Evaluating Convolutional Neural Network for Effective Mobile Malware Detection</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>2372-2381</pages><volume>112</volume><keywords><keyword>deep learning</keyword><keyword>malware</keyword><keyword>mobile</keyword><keyword>natural language processing</keyword><keyword>security</keyword><keyword>testing</keyword><keyword>text mining</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.procs.2017.08.216</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050917316204-main.pdf</url></pdf-urls><web-urls><url>http://linkinghub.elsevier.com/retrieve/pii/S1877050917316204</url></web-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Badra, Mohamad</author><author>Badra, Rouba Borghol</author></authors></contributors><titles><title>A Lightweight Security Protocol for NFC-based Mobile Payments</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>705-711</pages><volume>83</volume><issue>Ant</issue><keywords><keyword>Authentication</keyword><keyword>Eavesdropping</keyword><keyword>Key Exchange</keyword><keyword>Near-Field Communication (NFC)</keyword><keyword>Relay Attack</keyword><keyword>Transport Layer Security (TLS)</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Masson SAS</publisher><isbn>0000000000</isbn><electronic-resource-num>10.1016/j.procs.2016.04.156</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916301879-main.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.procs.2016.04.156</url></web-urls></urls><abstract>In this work, we describe a security solution that can be used to securely establish mobile payment transactions over the Near-Field Communication (NFC) radio interface. The proposed solution is very lightweight one; it uses symmetric cryptographic primitives on devices having memory and CPU resources limitations. We show that our approach maintains the security of NFC communications and we further demonstrate that our solution is simple, scalable, cost-effective, and incurs minimal computational processing overheads.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Alam, Shahid</author><author>Qu, Zhengyang</author><author>Riley, Ryan</author><author>Chen, Yan</author><author>Rastogi, Vaibhav</author></authors></contributors><titles><title>DroidNative: Automating and optimizing detection of Android native code malware variants</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>230-246</pages><volume>65</volume><keywords><keyword>Android native code</keyword><keyword>Control flow analysis</keyword><keyword>Data mining</keyword><keyword>Malware analysis</keyword><keyword>Malware variant detection</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2016.11.011</electronic-resource-num><urls><pdf-urls><url>internal-pdf://3.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2016.11.011</url></web-urls></urls><abstract>According to the Symantec and F-Secure threat reports, mobile malware development in 2013 and 2014 has continued to focus almost exclusively (~99%) on the Android platform. Malware writers are applying stealthy mutations (obfuscations) to create malware variants, thwarting detection by signature-based detectors. In addition, the plethora of more sophisticated detectors making use of static analysis techniques to detect such variants operate only at the bytecode level, meaning that malware embedded in native code goes undetected. A recent study shows that 86% of the most popular Android applications contain native code, making native code malware a plausible threat vector. This paper proposes DroidNative, an Android malware detector that uses specific control flow patterns to reduce the effect of obfuscations and provides automation. As far as we know, DroidNative is the first system that builds cross-platform (x86 and ARM) semantic-based signatures at the Android native code level, allowing the system to detect malware embedded in either bytecode or native code. When tested with a dataset of 5490 samples, DroidNative achieves a detection rate (DR) of 93.57% and a false positive rate of 2.7%. When tested with traditional malware variants, it achieves a DR of 99.48%, compared to the DRs of academic and commercial tools that range from 8.33% to 93.22%.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Idrees, Fauzia</author><author>Rajarajan, Muttukrishnan</author><author>Conti, Mauro</author><author>Chen, Thomas M.</author><author>Rahulamathavan, Yogachandran</author></authors></contributors><titles><title>PIndroid: A novel Android malware detection system using ensemble learning methods</title><secondary-title>Computers &amp; Security</secondary-title></titles><periodical><full-title>Computers &amp; Security</full-title></periodical><pages>36-46</pages><volume>68</volume><keywords/><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.03.011</electronic-resource-num><urls><pdf-urls><url>internal-pdf://5.pdf</url></pdf-urls><web-urls><url>http://linkinghub.elsevier.com/retrieve/pii/S0167404817300640</url></web-urls></urls><abstract>The extensive use of smartphones has been a major driving force behind a drastic increase of malware attacks. Covert techniques used by the malware make them hard to detect with signature based methods. In this paper, we present PIndroid – a novel Permissions and Intents based framework for identifying Android malware apps. To the best of our knowledge, PIndroid is the first solution that uses a combination of permissions and intents supplemented with Ensemble methods for accurate malware detection. The proposed approach, when applied to 1,745 real world applications, provides 99.8% accuracy (which is best reported to date). Empirical results suggest that the proposed framework is effective in detection of malware apps.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Monika</author><author>Zavarsky, Pavol</author><author>Lindskog, Dale</author></authors></contributors><titles><title>Experimental Analysis of Ransomware on Windows and Android Platforms: Evolution and Characterization</title><secondary-title>Procedia Computer Science</secondary-title></titles><periodical><full-title>Procedia Computer Science</full-title></periodical><pages>465-472</pages><volume>94</volume><keywords><keyword>Android</keyword><keyword>Characterization</keyword><keyword>Encryption</keyword><keyword>Evolution</keyword><keyword>Payload</keyword><keyword>Permissions</keyword><keyword>Ransomware</keyword><keyword>Windows</keyword></keywords><dates><year>2016</year></dates><electronic-resource-num>10.1016/j.procs.2016.08.072</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1-s2.0-S1877050916318221-main.pdf</url></pdf-urls></urls><abstract>The focus of the paper is on providing insights on how ransomware have evolved from its starting till March 2016 by analyzing samples of selected ransomware variants from existing ransomware families in Windows and Android environments. Seventeen Windows and eight Android ransomware families were analyzed. For each ransomware family, at least, three variants belonging to the same family were compared. The analysis revealed that ransomware variants behave in a very similar manner, but use different payloads. Our analysis shows that there has been a significant improvement in encryption techniques used by ransomware. The experimental results in Windows environment demonstrate that detection of ransomware is possible by monitoring abnormal filesystem and registry activities. In Android environment, our analysis reveals that likelihood of ransomware attacks can be reduced by paying a closer attention to permissions requested by the Android applications.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Maier, Dominik</author><author>Protsenko, Mykola</author><author>Müller, Tilo</author></authors></contributors><titles><title>A game of Droid and Mouse: The threat of split-personality malware on Android</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>2-15</pages><volume>54</volume><keywords><keyword>Android malware</keyword><keyword>Dynamic code loading</keyword><keyword>Dynamic script loading</keyword></keywords><dates><year>2015</year></dates><electronic-resource-num>10.1016/j.cose.2015.05.001</electronic-resource-num><urls><pdf-urls><url>internal-pdf://8.pdf</url></pdf-urls></urls><abstract>In the work at hand, we first demonstrate that Android malware can bypass current automated analysis systems, including AV solutions, mobile sandboxes, and the Google Bouncer. A tool called Sand-Finger allowed us to fingerprint Android-based analysis systems. By analyzing the fingerprints of ten unique analysis environments from different vendors, we were able to find characteristics in which all tested environments differ from actual hardware. Depending on the availability of an analysis system, malware can either behave benignly or load malicious code dynamically at runtime. We also have investigated the widespread of dynamic code loading among benign and malicious apps, and found that malicious apps make use of this technique more often. About one third out of 14,885 malware samples we analyzed was found to dynamically load and execute code. To hide malicious code from analysis, it can be loaded from encrypted assets or via network connections. As we show, however, even dynamic scripts which call existing functions enable an attacker to execute arbitrary code. To demonstrate the effectiveness of both dynamic code and script loading, we create proof-of-concept malware that surpasses up-to-date malware scanners for Android and show that known samples can enter the Google Play Store by modifying them only slightly.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Fan, Wenhao</author><author>Sang, Yaohui</author><author>Zhang, Daishuai</author><author>Sun, Ran</author><author>Liu, Yuan'an</author></authors></contributors><titles><title>DroidInjector: A process injection-based dynamic tracking system for runtime behaviors of Android applications</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>224-237</pages><volume>70</volume><keywords><keyword>Android</keyword><keyword>App behavior</keyword><keyword>Process injection</keyword><keyword>Security</keyword><keyword>Tracking</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.06.001</electronic-resource-num><urls><pdf-urls><url>internal-pdf://9.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2017.06.001</url></web-urls></urls><abstract>As the most widely applied mobile operating system for smartphones, Android is challenged by fast growing security problems, which are caused by malicious applications (apps). Behaviors of malicious apps become more and more inconspicuous, which largely increase the difficulty of security detection. This paper provides a new dynamic method, called DroidInjector, to further enrich Android malware detection technologies. DroidInjector is a process injection-based dynamic tracking method for monitoring the behaviors of target app during its running period. Distinguished with existing works, 1) DroidInjector uses a ptrace-based technology to attach itself to the process of the target app, so tracking can be done on smartphones or emulators, and without modifying Android OS; 2) DroidInjector can monitor security-sensitive Java API calls in Android Runtime (Android Virtual Machine) by hooking the APIs related to Android component lifecycle phases, dynamic library loading, multi-threading, inter-component and inter-process communications, and system resources. Thus, DroidInjector supports flexible deployments, and is able to provide a fine-grained context-aware, flow-aware and library-aware API calls tracking for the target app. DroidInjector is validated in extensive experiments through performance evaluation, application evaluation and case evaluation for multiple malicious and benign apps running on several smartphones installed with standard or customized Android systems.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Maiorca, Davide</author><author>Ariu, Davide</author><author>Corona, Igino</author><author>Aresu, Marco</author><author>Giacinto, Giorgio</author></authors></contributors><titles><title>Stealth attacks: An extended insight into the obfuscation effects on Android malware</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>16-31</pages><volume>51</volume><keywords><keyword>Android</keyword><keyword>Bytecode</keyword><keyword>Dalvik</keyword><keyword>DexGuard</keyword><keyword>Entry points</keyword><keyword>Evasion</keyword><keyword>Malware</keyword><keyword>Obfuscation</keyword><keyword>Signatures</keyword><keyword>Strings</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2015.02.007</electronic-resource-num><urls><pdf-urls><url>internal-pdf://6.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2015.02.007</url></web-urls></urls><abstract>In order to effectively evade anti-malware solutions, Android malware authors are progressively resorting to automatic obfuscation strategies. Recent works have shown, on small-scale experiments, the possibility of evading anti-malware engines by applying simple obfuscation transformations on previously detected malware samples. In this paper, we provide a large-scale experiment in which the detection performances of a high number of anti-malware solutions are tested against two different sets of malware samples that have been obfuscated according to different strategies. Moreover, we show that anti-malware engines search for possible malicious content inside assets and entry-point classes. We also provide a temporal analysis of the detection performances of anti-malware engines to verify if their resilience has improved since 2013. Finally, we show how, by manipulating the area of the Android executable that contains the strings used by the application, it is possible to deceive anti-malware engines so that they will identify legitimate samples as malware. On one hand, the attained results show that anti-malware systems have improved their resilience against trivial obfuscation techniques. On the other hand, more complex changes to the application executable have proved to be still effective against detection. Thus, we claim that a deeper static (or dynamic) analysis of the application is needed to improve the robustness of such systems.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Li, Yongbo</author><author>Yao, Fan</author><author>Lan, Tian</author><author>Venkataramani, Guru</author></authors></contributors><titles><title>SARRE: Semantics-aware rule recommendation and enforcement for event paths on android</title><secondary-title>IEEE Transactions on Information Forensics and Security</secondary-title></titles><periodical><full-title>IEEE Transactions on Information Forensics and Security</full-title></periodical><pages>2748-2762</pages><volume>11</volume><issue>12</issue><keywords><keyword>Android privacy</keyword><keyword>path identification</keyword><keyword>rule enforcement</keyword><keyword>rule recommendation</keyword><keyword>statistical analysis</keyword></keywords><dates><year>2016</year></dates><isbn>9783319288642</isbn><electronic-resource-num>10.1109/TIFS.2016.2596141</electronic-resource-num><urls><pdf-urls><url>internal-pdf://SARRE Semantics-Aware Rule Recommendation and Enforcement for Event Paths on Android.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Jang, Jae Wook</author><author>Kang, Hyunjae</author><author>Woo, Jiyoung</author><author>Mohaisen, Aziz</author><author>Kim, Huy Kang</author></authors></contributors><titles><title>Andro-Dumpsys: Anti-malware system based on the similarity of malware creator and malware centric information</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>125-138</pages><volume>58</volume><issue>2016</issue><keywords><keyword>Android</keyword><keyword>Malware creator centric information</keyword><keyword>Mobile malware</keyword><keyword>Similarity</keyword><keyword>Volatile memory acquisition</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2015.12.005</electronic-resource-num><urls><pdf-urls><url>internal-pdf://11.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2015.12.005</url></web-urls></urls><abstract>With the fast growth in mobile technologies and the accompanied rise of the integration of such technologies into our everyday life, mobile security is viewed as one of the most prominent areas and is being addressed accordingly. For that, and especially to address the threat associated with malware, various malware-centric analysis methods are developed in the literature to identify, classify, and defend against mobile threats and malicious actors. However, along with this development, anti-malware analysis techniques, such as packing, dynamic loading, and dex encryption, have seen wide adoption, making existing malware-centric analysis methods less effective. In this paper, we propose a feature-rich hybrid anti-malware system, called Andro-Dumpsys, which leverages volatile memory acquisition for accurate malware detection and classification. Andro-Dumpsys is based on similarity matching of malware creator-centric and malware-centric information. Using Andro-Dumpsys, we detect and classify malware samples into similar behavior groups by exploiting their footprints, which are equivalent to unique behavior characteristics. Our experimental results demonstrate that Andro-Dumpsys is scalable, and performs well in detecting malware and classifying malware families with low false positives and false negatives, and is capable of responding zero-day threats.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Junaid, Mohsin</author><author>Liu, Donggang</author><author>Kung, David</author></authors></contributors><titles><title>Dexteroid: Detecting malicious behaviors in Android apps using reverse-engineered life cycle models</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>92-117</pages><volume>59</volume><keywords><keyword>Android</keyword><keyword>Life cycle models</keyword><keyword>Malware</keyword><keyword>Mobile app security</keyword><keyword>Privacy</keyword><keyword>Static analysis</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2016.01.008</electronic-resource-num><urls><pdf-urls><url>internal-pdf://12.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2016.01.008</url></web-urls></urls><abstract>The amount of Android malware has increased greatly during the last few years. Static analysis is widely used in detecting such malware by analyzing the code without execution. The effectiveness of current tools relies on the app model as well as the malware detection algorithm which analyzes the app model. If the model and/or the algorithm is inadequate, then sophisticated attacks that are triggered by specific sequences of events will not be detected. This paper presents a static analysis framework called Dexteroid, which uses reverse-engineered life cycle models to accurately capture the behaviors of Android components. Dexteroid systematically derives event sequences from the models, and uses them to detect attacks launched by specific ordering of events. A prototype implementation of Dexteroid detects two types of attacks: (1) leakage of private information, and (2) sending SMS to premium-rate numbers. A series of experiments are conducted on 1526 Google Play apps, 1259 Genome Malware apps, and a suite of benchmark apps called DroidBench and the results are compared with a state-of-the-art static analysis tool called FlowDroid. The evaluation results show that the proposed framework is effective and efficient in terms of precision, recall, and execution time.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Pan, L</author><author>Zheng, X</author><author>Chen, H X</author><author>Luan, T</author><author>Bootwala, H</author><author>Batten, L</author></authors></contributors><titles><title>Cyber security attacks to modern vehicular systems</title><secondary-title>Journal of Information Security and Applications</secondary-title></titles><periodical><full-title>Journal of Information Security and Applications</full-title></periodical><pages>90-100</pages><volume>36</volume><keywords><keyword>CAN bus</keyword><keyword>Security</keyword><keyword>Security attacks</keyword><keyword>Smartphone</keyword><keyword>Vehicle systems</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.jisa.2017.08.005</electronic-resource-num><urls><pdf-urls><url>internal-pdf://10.1016@j.jisa.2017.08.005.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.jisa.2017.08.005</url></web-urls></urls><abstract>Security is a fundamental concern in modern vehicular systems. The advancement in modern vehicular systems provides many benefits such as reducing traffic congestion and improving safety and fuel economy via vehicular networks. However, many vehicular experts in industry take it for granted that Controller Area Network (CAN) bus being the most important part of a vehicle is secured and cannot be easily hacked; furthermore, cyber security experts have limited exposure to CAN bus. This paper provides in-depth explanation of CAN bus and feasible scenarios where a vehicle is no longer safe after its CAN bus is compromised. Furthermore, the inclusion of CAN bus attacking codes in a mobile malware is cost-effective for the malicious attackers but very challenging for vehicle engineers to mitigate the security risks. Based on a variety of security attacks, we analyze potential attacks and their impact on the safety of the vehicle users. A number of vulnerabilities and attack scenarios are exposed which allows malicious attackers to hamper the vehicular control systems and cause harm to the vehicle even the passengers. In this paper, we do not report on our own implementation of attacks on real vehicles; our aim is to motivate further research to improve the security of the modern vehicular systems.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Lee, Jehyun</author><author>Lee, Suyeon</author><author>Lee, Heejo</author></authors></contributors><titles><title>Screening smartphone applications using malware family signatures</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>234-249</pages><volume>52</volume><keywords><keyword>Android</keyword><keyword>Family signature</keyword><keyword>Malware</keyword><keyword>Smartphone security</keyword><keyword>Static analysis</keyword><keyword>Variant detection</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Ltd</publisher><isbn>9783642392177</isbn><electronic-resource-num>10.1016/j.cose.2015.02.003</electronic-resource-num><urls><pdf-urls><url>internal-pdf://10.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2015.02.003</url></web-urls></urls><abstract>The sharp increase in smartphone malware has become one of the most serious security problems. Since the Android platform has taken the dominant position in smartphone popularity, the number of Android malware has grown correspondingly and represents critical threat to the smartphone users. This rise in malware is primarily attributable to the occurrence of variants of existing malware. A set of variants stem from one malware can be considered as one malware family, and malware families cover more than half of the Android malware population. A conventional technique for defeating malware is the use of signature matching which is efficient from a time perspective but not very practical because of its lack of robustness against the malware variants. As a counter approach for handling the issue of variants behavior analysis techniques have been proposed but require extensive time and resources. In this paper, we propose an Android malware detection mechanism that uses automated family signature extraction and family signature matching. Key concept of the mechanism is to extract a set of family representative binary patterns from evaluated family members as a signature and to classify each set of variants into a malware family via an estimation of similarity to the signatures. The proposed family signature and detection mechanism offers more flexible variant detection than does the legacy signature matching, which is strictly dependent on the presence of a specific string. Furthermore, compared with the previous behavior analysis techniques considering family detection, the proposed family signature has higher detection accuracy without the need for the significant overhead of data and control flow analysis. Using the proposed signature, we can detect new variants of known malware efficiently and accurately by static matching. We evaluated our mechanism with 5846 real world Android malware samples belonging to 48 families collected in April 2014 at an anti-virus company; experimental results showed that; our mechanism achieved greater than 97% accuracy in detection of variants. We also demonstrated that the mechanism has a linear time complexity with the number of target applications.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Caviglione, Luca</author><author>Gaggero, Mauro</author><author>Lalande, Jean-françois</author><author>Mazurczyk, Wojciech</author><author>Member, Senior</author></authors></contributors><titles><title>2015-Seeing the Unseen Revealing Mobile Malware Hidden Communications via Energy Consumption and Artificial Intelligence.pdf</title></titles><periodical/><pages>799-810</pages><volume>11</volume><issue>4</issue><keywords/><dates><year>2016</year></dates><urls><pdf-urls><url>internal-pdf://Seeing the Unseen Revealing Mobile Malware Hidden Communications via Energy Consumption and Artificial Intelligence.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Shao, Yuru</author><author>Luo, Xiapu</author><author>Qian, Chenxiong</author></authors></contributors><titles><title>RootGuard: Protecting rooted android phones</title><secondary-title>Computer</secondary-title></titles><periodical><full-title>Computer</full-title></periodical><pages>32-40</pages><volume>47</volume><issue>6</issue><keywords><keyword>Android</keyword><keyword>RootGuard</keyword><keyword>malware</keyword><keyword>root privilege</keyword><keyword>root-management systems</keyword><keyword>security</keyword><keyword>smartphone security</keyword></keywords><dates><year>2014</year></dates><isbn>0018-9162 VO  - 47</isbn><electronic-resource-num>10.1109/MC.2014.163</electronic-resource-num><urls><pdf-urls><url>internal-pdf://RootGuard Protecting Rooted Android Phones.pdf</url></pdf-urls></urls><abstract>Though popular for achieving full operation functionality, rooting Android phones opens these devices to significant security threats. RootGuard offers protection from malware with root privileges while providing user flexibility and control. The Web...</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Jiang, Yong</author></authors></contributors><titles><title>SAIDR : A New Dynamic Model for SMS-Based Worm Propagation in Mobile Networks</title></titles><periodical/><pages>9935-9943</pages><volume>5</volume><keywords/><dates><year>2017</year></dates><isbn>2015051216285</isbn><urls><pdf-urls><url>internal-pdf://SAIDR A New Dynamic Model for SMS-Based Worm Propagation in Mobile Networks.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Valdi, Andrea</author><author>Lever, Eros</author><author>Benefico, Simone</author><author>Quarta, Davide</author><author>Zanero, Stefano</author><author>Maggi, Federico</author></authors></contributors><titles><title>Scalable Testing of Mobile Antivirus Applications</title><secondary-title>Computer</secondary-title></titles><periodical><full-title>Computer</full-title></periodical><pages>60-68</pages><volume>48</volume><issue>11</issue><keywords><keyword>Android OS</keyword><keyword>antivirus testing</keyword><keyword>malware</keyword><keyword>mobile computing</keyword><keyword>mobile malware</keyword><keyword>mobile operating systems</keyword></keywords><dates><year>2015</year></dates><isbn>0018-9162 VO - 48</isbn><electronic-resource-num>10.1109/MC.2015.320</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Scalable Testing of Mobile Antivirus Applications.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Haus, Michael</author><author>Waqas, Muhammad</author><author>Ding, Aaron Yi</author><author>Li, Yong</author><author>Tarkoma, Sasu</author><author>Ott, Jörg</author></authors></contributors><titles><title>Security and Privacy in Device-to-Device (D2D) Communication: A Review</title><secondary-title>IEEE Communications Surveys and Tutorials</secondary-title></titles><periodical><full-title>IEEE Communications Surveys and Tutorials</full-title></periodical><pages>1054-1079</pages><volume>19</volume><issue>2</issue><keywords><keyword>Device-to-device (D2D) communication</keyword><keyword>privacy</keyword><keyword>security</keyword></keywords><dates><year>2017</year></dates><isbn>9781509006908</isbn><electronic-resource-num>10.1109/COMST.2017.2649687</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Security and Privacy in Device-to-Device -D2D- Communication A Review.pdf</url></pdf-urls></urls><abstract>—Device-to-Device (D2D) communication presents a new paradigm in mobile networking to facilitate data exchange between physically proximate devices. The development of D2D is driven by mobile operators to harvest short range commu-nications for improving network performance and supporting proximity-based services. In this article, we investigate two fundamental and interrelated aspects of D2D communication, security and privacy, which are essential for the adoption and deployment of D2D. We present an extensive review of the state-of-the-art solutions for enhancing security and privacy in D2D communication. By summarizing the challenges, requirements, and features of different proposals, we identify lessons to be learned from existing studies and derive a set of &quot; best practices &quot; . The primary goal of our work is to equip researchers and devel-opers with a better understanding of the underlying problems and the potential solutions for D2D security and privacy. To inspire follow-up research, we identify open problems and highlight fu-ture directions with regard to system and communication design. To the best of our knowledge, this is the first comprehensive review to address the fundamental security and privacy issues in D2D communication.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Wu, Longfei</author><author>Du, Xiaojiang</author><author>Fu, Xinwen</author></authors></contributors><titles><title>Security threats to mobile multimedia applications: Camera-based attacks on mobile phones</title><secondary-title>IEEE Communications Magazine</secondary-title></titles><periodical><full-title>IEEE Communications Magazine</full-title></periodical><pages>80-87</pages><volume>52</volume><issue>3</issue><keywords/><dates><year>2014</year></dates><isbn>0163-6804</isbn><electronic-resource-num>10.1109/MCOM.2014.6766089</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Security threats to mobile multimedia applications Camera-based attacks on mobile phones.pdf</url></pdf-urls></urls><abstract>Today's mobile smartphones are very powerful, and many smartphone applications use wireless multimedia communications. Mobile phone security has become an important aspect of security issues in wireless multimedia communications. As the most popular mobile operating system, Android security has been extensively studied by researchers. However, few works have studied mobile phone multimedia security. In this article, we focus on security issues related to mobile phone cameras. Specifically, we discover several new attacks that are based on the use of phone cameras. We implement the attacks on real phones, and demonstrate the feasibility and effectiveness of the attacks. Furthermore, we propose a lightweight defense scheme that can effectively detect these attacks.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Cho, Taejoo</author><author>Kim, Hyunki</author><author>Yi, Jeong Hyun</author></authors></contributors><titles><title>Security Assessment of Code Obfuscation Based on Dynamic Monitoring in Android Things</title><secondary-title>IEEE Access</secondary-title></titles><periodical><full-title>IEEE Access</full-title></periodical><pages>6361-6371</pages><volume>5</volume><keywords><keyword>Android Things;mobile security;security assessment</keyword></keywords><dates><year>2017</year></dates><electronic-resource-num>10.1109/ACCESS.2017.2693388</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Security Assessment of Code Obfuscation Based on Dynamic Monitoring in Android Things.pdf</url></pdf-urls></urls><abstract>Android-based Internet-of-Things devices with excellent compatibility and openness are constantly emerging. A typical example is Android Things that Google supports. Compatibility based on the same platform can provide more convenient personalization services centering on mobile devices, while this uniformity-based computing environment can expose many security vulnerabilities. For example, new mobile malware running on Android can instantly transition to all connected devices. In particular, the Android platform has a structural weakness that makes it easy to repackage applications. This can lead to malicious behavior. To protect mobile apps that are vulnerable to malicious activity, various code obfuscation techniques are applied to key logic. The most effective one of this kind involves safely concealing application programming interfaces (API). It is very important to ensure that obfuscation is applied to the appropriate API with an adequate degree of resistance to reverse engineering. Because there is no objective evaluation method, it depends on the developer judgment. Therefore, in this paper, we propose a scheme that can quantitatively evaluate the level of hiding of APIs, which represent the function of the Android application based on machine learning theory. To perform the quantitative evaluation, the API information is obtained by static analysis of a DEX file, and the API-called code executed in Dalvik in the Android platform is dynamically extracted. Moreover, the sensitive APIs are classified using the extracted API and Naive Bayes classification. The proposed scheme yields a high score according to the level of hiding of the classified API. We tested the proposed scheme on representative applications of the Google Play Store. We believe it can be used as a model for obfuscation assessment schemes, because it can evaluate the level of obfuscation in general without relying on specific obfuscation tools.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Das, Sanjeev</author><author>Liu, Yang</author><author>Zhang, Wei</author><author>Chandramohan, Mahintham</author></authors></contributors><titles><title>2015-Semantics-based Online Malware Detection Towards Efficient Real-time Protection Against Malware.pdf</title></titles><periodical/><pages>289-302</pages><volume>11</volume><issue>2</issue><keywords/><dates><year>2016</year></dates><urls><pdf-urls><url>internal-pdf://Semantics-Based Online Malware Detection Towards Efficient Real-Time Protection Against Malware.pdf</url></pdf-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Wu Bin</author><author>Lu Tianliang</author><author>Zheng Kangfeng</author><author>Zhang Dongmei</author><author>Lin Xing</author></authors></contributors><titles><title>Smartphone malware detection model based on artificial immune system</title><secondary-title>China Communications</secondary-title></titles><periodical><full-title>China Communications</full-title></periodical><pages>86-92</pages><volume>11</volume><issue>13</issue><keywords><keyword>artificial immune system</keyword><keyword>clonal</keyword><keyword>detection</keyword><keyword>malware</keyword><keyword>negative selection</keyword><keyword>smartphone</keyword></keywords><dates><year>2014</year></dates><electronic-resource-num>10.1109/CC.2014.7022530</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Smartphone malware detection model based on artificial immune system.pdf</url></pdf-urls><web-urls><url>http://ieeexplore.ieee.org/document/7022530/</url></web-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Peng, Sancheng</author><author>Yu, Shui</author><author>Yang, Aimin</author></authors></contributors><titles><title>Smartphone malware and its propagation modeling: A survey</title><secondary-title>IEEE Communications Surveys and Tutorials</secondary-title></titles><periodical><full-title>IEEE Communications Surveys and Tutorials</full-title></periodical><pages>925-941</pages><volume>16</volume><issue>2</issue><keywords><keyword>mobile malware</keyword><keyword>propagation modeling</keyword><keyword>simulator</keyword><keyword>smartphone</keyword></keywords><dates><year>2014</year></dates><isbn>1553-877X VO - 16</isbn><electronic-resource-num>10.1109/SURV.2013.070813.00214</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Smartphone Malware and Its Propagation Modeling A Survey.pdf</url></pdf-urls></urls><abstract>Smartphones are pervasively used in society, and have been both the target and victim of malware writers. Motivated by the significant threat that presents to legitimate users, we survey the current smartphone malware status and their propagation models. The content of this paper is presented in two parts. In the first part, we review the short history of mobile malware evolution since 2004, and then list the classes of mobile malware and their infection vectors. At the end of the first part, we enumerate the possible damage caused by smartphone malware. In the second part, we focus on smartphone malware propagation modeling. In order to understand the propagation behavior of smartphone malware, we recall generic epidemic models as a foundation for further exploration. We then extensively survey the smartphone malware propagation models. At the end of this paper, we highlight issues of the current smartphone malware propagation models and discuss possible future trends based on our understanding of this topic.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Mansfield-Devine, Steve</author></authors></contributors><titles><title>The dark side of advertising</title><secondary-title>Computer Fraud and Security</secondary-title></titles><periodical><full-title>Computer Fraud and Security</full-title></periodical><pages>5-8</pages><volume>2014</volume><issue>11</issue><keywords/><dates><year>2014</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/S1361-3723(14)70550-0</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Mansfield-Devine - 2014 - The dark side of advertising.pdf</url><url>internal-pdf://Mansfield-Devine - 2014 - The dark side of advertising(2).pdf</url><url>internal-pdf://mansfielddevine2014.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/S1361-3723(14)70547-0</url></web-urls></urls><abstract>Advertising is pervasive on the Internet these days. It's usually the primary income stream for many of the services, such as Facebook and Google, that we take for granted. But it's also a source of serious threats to our security. Malicious advertising - or 'malvertising' - is an increasingly common way for cyber-criminals to either spread malware or lure victims to sites where malware and other scams lurk. And the shift to mobile platforms is only making this problem worse.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Liang, Hongliang</author><author>Li, Mingyu</author><author>Xu, Jian</author><author>Hu, Wenying</author><author>Pei, Xiaoxiao</author><author>Jia, Xiaodong</author><author>Song, Yan</author></authors></contributors><titles><title>vmOS: A virtualization-based, secure desktop system</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>329-343</pages><volume>65</volume><keywords><keyword>Hardware virtualization</keyword><keyword>KVM</keyword><keyword>Mandatory access control</keyword><keyword>Qemu</keyword><keyword>Secure desktop system</keyword><keyword>Virtual machine isolation</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2016.10.008</electronic-resource-num><urls><pdf-urls><url>internal-pdf://47.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2016.10.008</url></web-urls></urls><abstract>Centralized management is typically applied in modern operating system (OS) architecture; however, such systems are prone to crash when any certain component of the OS is explicitly damaged. The basic reason is that these OSes can rarely support a thoroughly secure or isolated environment either between OS kernel-mode components or between user-mode softwares. To mitigate this issue, we propose vmOS, an operating system that aims at improving the security of desktop computing environment. vmOS applies isolation technique to reduce attack surface, virtualization and mandatory access control to provide isolated environment among system components, application software and user privacy. We implement vmOS by adopting hardware-supported virtualization technology and modifying several well-known open source softwares, which aim to provide run-time efficiency of integrated system. Finally, we evaluate the security and performance by some vulnerability exploits and benchmark tools, showing that vmOS is capable of assuring the overall security of users' desktop computing with less overhead.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Meng, Weizhi</author><author>Li, Wenjuan</author><author>Kwok, Lam For</author><author>Choo, Kim Kwang Raymond</author></authors></contributors><titles><title>Towards enhancing click-draw based graphical passwords using multi-touch behaviours on smartphones</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>213-229</pages><volume>65</volume><keywords><keyword>Graphical passwords</keyword><keyword>Human factors</keyword><keyword>Mobile security</keyword><keyword>Multi-touch</keyword><keyword>User authentication on smartphones</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2016.11.010</electronic-resource-num><urls><pdf-urls><url>internal-pdf://46.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2016.11.010</url></web-urls></urls><abstract>Graphical passwords (GPs) are recognised as one of the potential alternatives in addressing the limitations in conventional text-based password authentication. With the rapid development of mobile devices (i.e., the increase of computing power), GP-based systems have already been implemented not only on PCs, but also on smartphones to authenticate legitimate users and detect impostors. However, as compared to common computers, we identify that users are able to perform some distinct actions like multi-touch on smartphones. The multi-touch is a distinguished feature on current smartphones and its impact on graphical password creation is an important topic in the literature. In this paper, our interest is to investigate the influence of multi-touch behaviours on users’ habit in creating graphical passwords, especially on click-draw based GPs (shortly CD-GPS) on mobile devices. In the evaluation, we develop a multi-touch enabled CD-GPS on smartphones and conduct two major experiments with a total of 90 participants. The study results indicate that participants are more likely to use multi-touch features to create their secrets, and multi-touch can make a positive impact on creating graphical passwords (i.e., offering higher success rates and less time consumption).</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Palumbo, Paolo</author><author>Sayfullina, Luiza</author><author>Komashinskiy, Dmitriy</author><author>Eirola, Emil</author><author>Karhunen, Juha</author></authors></contributors><titles><title>A pragmatic android malware detection procedure</title><secondary-title>Computers &amp; Security</secondary-title></titles><periodical><full-title>Computers &amp; Security</full-title></periodical><keywords/><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.07.013</electronic-resource-num><urls><pdf-urls><url>internal-pdf://1.pdf</url></pdf-urls><web-urls><url>http://linkinghub.elsevier.com/retrieve/pii/S0167404817301542</url></web-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Callegari, Christian</author><author>Giordano, Stefano</author><author>Pagano, Michele</author></authors></contributors><titles><title>An information-theoretic method for the detection of anomalies in network traffic</title><secondary-title>Computers &amp; Security</secondary-title></titles><periodical><full-title>Computers &amp; Security</full-title></periodical><pages>351-365</pages><volume>70</volume><keywords/><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2017.07.004</electronic-resource-num><urls><pdf-urls><url>internal-pdf://48.pdf</url></pdf-urls><web-urls><url>http://linkinghub.elsevier.com/retrieve/pii/S0167404817301438</url></web-urls></urls></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Canfora, Gerardo</author><author>Mercaldo, Francesco</author><author>Visaggio, Corrado Aaron</author></authors></contributors><titles><title>An HMM and structural entropy based detector for Android malware: An empirical study</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>1-18</pages><volume>61</volume><keywords><keyword>Android</keyword><keyword>Entropy</keyword><keyword>HMM</keyword><keyword>Malware</keyword><keyword>Mobile</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2016.04.009</electronic-resource-num><urls><pdf-urls><url>internal-pdf://2.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2016.04.009</url></web-urls></urls><abstract>Smartphones are becoming more and more popular and, as a consequence, malware writers are increasingly engaged to develop new threats and propagate them through official and third-party markets. In addition to the propagation vectors, malware is also evolving quickly the techniques adopted for infecting victims and hiding their malicious nature to antimalware scanning. From SMS Trojans to legitimate applications repacked with malicious payload, from AES encrypted root exploits to the dynamic loading of a payload retrieved from a remote server: malicious code is becoming more and more hard to detect. In this paper we experimentally evaluate two techniques for detecting Android malware: the first one is based on Hidden Markov Model, while the second one exploits structural entropy. These two techniques have been successfully applied to detect PCs viruses in previous works, and only one work in literature analyzes the application of HMM to the detection of Android malware. We demonstrate that these methods, which reveal effective for PCs virus, are also successful for detecting and classifying mobile malware. Our results are promising: we obtain a precision of 0.96 to discriminate a malware application, and a precision of 0.978 to identify the malware family.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rudd, Ethan M.</author><author>Rozsa, Andras</author><author>Günther, Manuel</author><author>Boult, Terrance E.</author></authors></contributors><titles><title>A Survey of Stealth Malware Attacks, Mitigation Measures, and Steps Toward Autonomous Open World Solutions</title><secondary-title>IEEE Communications Surveys and Tutorials</secondary-title></titles><periodical><full-title>IEEE Communications Surveys and Tutorials</full-title></periodical><pages>1145-1172</pages><volume>19</volume><issue>2</issue><keywords><keyword>Stealth</keyword><keyword>anomaly detection</keyword><keyword>extreme value theory</keyword><keyword>intrusion detection</keyword><keyword>machine learning</keyword><keyword>malware</keyword><keyword>novelty detection</keyword><keyword>open set</keyword><keyword>outlier detection</keyword><keyword>recognition</keyword><keyword>rootkits</keyword></keywords><dates><year>2017</year></dates><electronic-resource-num>10.1109/COMST.2016.2636078</electronic-resource-num><urls><pdf-urls><url>internal-pdf://A Survey of Stealth Malware Attacks, Mitigation_2017.pdf</url></pdf-urls></urls><abstract>Development of generic and autonomous anti-malware solutions is becoming increasingly vital as the deployment of stealth malware continues to increase at an alarming rate. In this paper, we survey malicious stealth technologies as well as existing autonomous countermeasures. Our findings suggest that while machine learning offers promising potential for generic and autonomous solutions, both at the network level and at the host level, several flawed assumptions inherent to most recognition algorithms prevent a direct mapping between the stealth malware recognition problem and a machine learning solution. The most notable of these flawed assumptions is the closed world assumption: that no sample belonging to a class outside of a static training set will appear at query time. We present a formalized adaptive open world framework for stealth malware recognition, relating it mathematically to research from other machine learning domains.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Ju, Seung hwan</author><author>Seo, Hee suk</author><author>Kwak, Jin</author></authors></contributors><titles><title>Research on android malware permission pattern using permission monitoring system</title><secondary-title>Multimedia Tools and Applications</secondary-title></titles><periodical><full-title>Multimedia Tools and Applications</full-title></periodical><pages>14807-14817</pages><volume>75</volume><issue>22</issue><keywords><keyword>Application analysis</keyword><keyword>Application permission</keyword><keyword>Mobile security</keyword></keywords><dates><year>2016</year></dates><electronic-resource-num>10.1007/s11042-016-3273-x</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Research on android malware permission pattern_2016.pdf</url></pdf-urls></urls><abstract>Mobile anti-viruses used mainly are the reverse engineering-based analysis and the sandbox-based analysis. There methods can analyze in detail. But, they take a lot of time and have a one-time payout. This study investigates the permissions requested by Android applications, and the possibility of identifying suspicious applications based only on information presented to the user before an application is downloaded The pattern analysis is based on a smaller data set consisting of confirmed malicious applications. The method is evaluated based on its ability to recognize malicious potential in the analyzed applications. This study is a service-based malware analysis, it will be based on the mobile security study.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Kamesh</author><author>Sakthi Priya, N.</author></authors></contributors><titles><title>Security enhancement of authenticated RFID generation</title><secondary-title>International Journal of Applied Engineering Research</secondary-title></titles><periodical><full-title>International Journal of Applied Engineering Research</full-title></periodical><pages>5968-5974</pages><volume>9</volume><issue>22</issue><keywords><keyword>Authentication</keyword><keyword>Privacy</keyword><keyword>Protocol design and analysis</keyword><keyword>RFID</keyword><keyword>Security</keyword></keywords><dates><year>2014</year></dates><isbn>1111010110111</isbn><electronic-resource-num>10.1002/sec</electronic-resource-num><urls><pdf-urls><url>internal-pdf://An effective behavior-based Android malware_2015.pdf</url></pdf-urls></urls><abstract>To protect user privacy and data security in cloud computing, a secure k-nearest neighbor computation-enhanced scheme on encrypted database has been proposed by Wong, Cheung, Kao and Mamoulis. The scheme is proven resistant to the known-plaintext attack. We show that contrary to claims, the enhanced asymmetric scalar-product-preserving encryption cannot resist known-plaintext attack by directly solving a secret key from a set of known plaintext–ciphertext pairs.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Dini, Gianluca</author><author>Martinelli, Fabio</author><author>Matteucci, Ilaria</author><author>Petrocchi, Marinella</author><author>Saracino, Andrea</author><author>Sgandurra, Daniele</author></authors></contributors><titles><title>Risk analysis of Android applications: A user-centric solution</title><secondary-title>Future Generation Computer Systems</secondary-title></titles><periodical><full-title>Future Generation Computer Systems</full-title></periodical><keywords><keyword>Android security</keyword><keyword>Malware</keyword><keyword>Risk analysis</keyword><keyword>Usability</keyword><keyword>User experience and expectations</keyword><keyword>User-centric devices</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.future.2016.05.035</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Risk analysis of Android applications_ A user-centric solution_2016.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.future.2016.05.035</url></web-urls></urls><abstract>Android applications (apps) pose many risks to their users, e.g., by including code that may threaten user privacy or system integrity. Most of the current security countermeasures for detecting dangerous apps show some weaknesses, mainly related to users' understanding and acceptance. Hence, users would benefit from an effective but simple technique that indicates whether an app is safe or risky to be installed. In this paper, we present MAETROID (Multi-criteria App Evaluator of TRust for AndrOID), a framework to evaluate the trustworthiness of Android apps, i.e., the amount of risk they pose to users, e.g., in terms of confidentiality and integrity. MAETROID performs a multi-criteria analysis of an app at deploy-time and returns a single easy-to-understand evaluation of the app's risk level (i.e., Trusted, Medium Risk, and High Risk), aimed at driving the user decision on whether or not installing a new app. The criteria include the set of requested permissions and a set of metadata retrieved from the marketplace, denoting the app quality and popularity. We have tested MAETROID on a set of 11,000 apps both coming from Google Play and from a database of known malicious apps. The results show a good accuracy in both identifying the malicious apps and in terms of false positive rate.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Wang, Chundong</author><author>Li, Zhiyuan</author><author>Gong, Liangyi</author><author>Mo, Xiuliang</author><author>Yang, Hong</author><author>Zhao, Yi</author></authors></contributors><titles><title>An Android malicious code detection method based on improved DCA algorithm</title><secondary-title>Entropy</secondary-title></titles><periodical><full-title>Entropy</full-title></periodical><pages>1-15</pages><volume>19</volume><issue>2</issue><keywords><keyword>Android malware</keyword><keyword>DCA</keyword><keyword>Dalvik disassembly sequence</keyword><keyword>Danger theory</keyword><keyword>Static detection</keyword><keyword>Suspicious API</keyword></keywords><dates><year>2017</year></dates><electronic-resource-num>10.3390/e19020065</electronic-resource-num><urls><pdf-urls><url>internal-pdf://An Android Malicious Code Detection Method Based_2017.pdf</url></pdf-urls></urls><abstract>Recently, Android malicious code has increased dramatically and the technology of reinforcement is increasingly powerful. Due to the development of code obfuscation and polymorphic deformation technology, the current Android malicious code static detection method whose feature selected is the semantic of application source code can not completely extract malware’s code features. The Android malware static detection methods whose features used are only obtained from the AndroidManifest.xml file are easily affected by useless permissions. Therefore, there are some limitations in current Android malware static detection methods. The current Android malware dynamic detection algorithm is mostly required to customize the system or needs system root permissions. Based on the Dendritic Cell Algorithm (DCA), this paper proposes an Android malware algorithm that has a higher detection rate, does not need to modify the system, and reduces the impact of code obfuscation to a certain degree. This algorithm is applied to an Android malware detection method based on oriented Dalvik disassembly sequence and application interface (API) calling sequence. Through the designed experiments, the effectiveness of this method is verified for the detection of Android malware.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>McWilliams, Gavin</author><author>Sezer, Sakir</author><author>Yerima, Suleiman Y.</author></authors></contributors><titles><title>Analysis of Bayesian classification-based approaches for Android malware detection</title><secondary-title>IET Information Security</secondary-title></titles><periodical><full-title>IET Information Security</full-title></periodical><pages>25-36</pages><volume>8</volume><issue>1</issue><keywords/><dates><year>2014</year></dates><isbn>1751-8709</isbn><electronic-resource-num>10.1049/iet-ifs.2013.0095</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Analysis of Bayesian classification-based approaches_2014.pdf</url></pdf-urls><web-urls><url>http://digital-library.theiet.org/content/journals/10.1049/iet-ifs.2013.0095</url></web-urls></urls><abstract>Mobile malware has been growing in scale and complexity spurred by the unabated uptake of smartphones worldwide. Android is fast becoming the most popular mobile platform resulting in sharp increase in malware targeting the platform. Additionally, Android malware is evolving rapidly to evade detection by traditional signature-based scanning. Despite current detection measures in place, timely discovery of new malware is still a critical issue. This calls for novel approaches to mitigate the growing threat of zero-day Android malware. Hence, the authors develop and analyse proactive machine-learning approaches based on Bayesian classification aimed at uncovering unknown Android malware via static analysis. The study, which is based on a large malware sample set of majority of the existing families, demonstrates detection capabilities with high accuracy. Empirical results and comparative analysis are presented offering useful insight towards development of effective static-analytic Bayesian classification-based solutions for detecting unknown Android malware.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Song, Jun</author><author>Han, Chunling</author><author>Wang, Kaixin</author><author>Zhao, Jian</author><author>Ranjan, Rajiv</author><author>Wang, Lizhe</author></authors></contributors><titles><title>An integrated static detection and analysis framework for android</title><secondary-title>Pervasive and Mobile Computing</secondary-title></titles><periodical><full-title>Pervasive and Mobile Computing</full-title></periodical><pages>15-25</pages><volume>32</volume><keywords><keyword>Android security</keyword><keyword>Malware detection</keyword><keyword>Static detection</keyword><keyword>Threat degree</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.pmcj.2016.03.003</electronic-resource-num><urls><pdf-urls><url>internal-pdf://An integrated static detection and analysis framework for android_2016.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.pmcj.2016.03.003</url></web-urls></urls><abstract>The security and privacy issues of android system have attracted a lot of attention from both industry and academia in recent years. Static detection is one typical method to analyze malicious code. However, existing single static detection method can introduce high false alarm rate and is only appropriate for a limited scope. In this paper, we propose an integrated static detection framework, which consists of four layers of filtering mechanisms, that is, the message digest (MD5) values, the combination of malicious permissions, the dangerous permissions, and the dangerous intention, respectively. An intuitive threat-degree model is proposed especially on dangerous permissions detection. Furthermore, we implement a prototype system ASE and validate its feasibility, performance and scalability. A comprehensive evaluation shows that the proposed framework has obvious advantages especially in efficiency, granularity, layers, and correctness.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Sadeghi, Alireza</author><author>Bagheri, Hamid</author><author>Garcia, Joshua</author><author>Malek, Sam</author></authors></contributors><titles><title>A Taxonomy and Qualitative Comparison of Program Analysis Techniques for Security Assessment of Android Software</title><secondary-title>IEEE Transactions on Software Engineering</secondary-title></titles><periodical><full-title>IEEE Transactions on Software Engineering</full-title></periodical><pages>492-530</pages><volume>43</volume><issue>6</issue><keywords><keyword>Taxonomy and survey</keyword><keyword>android platform</keyword><keyword>program analysis</keyword><keyword>security assessment</keyword></keywords><dates><year>2017</year></dates><isbn>0098-5589 VO  - 43</isbn><electronic-resource-num>10.1109/TSE.2016.2615307</electronic-resource-num><urls><pdf-urls><url>internal-pdf://A Taxonomy and Qualitative Comparison of_2017.pdf</url></pdf-urls></urls><abstract>In parallel with the meteoric rise of mobile software, we are witnessing an alarming escalation in the number and sophistication of the security threats targeted at mobile platforms, particularly Android, as the dominant platform. While existing research has made significant progress towards detection and mitigation of Android security, gaps and challenges remain. This paper contributes a comprehensive taxonomy to classify and characterize the state-of-the-art research in this area. We have carefully followed the systematic literature review process, and analyzed the results of more than 300 research papers, resulting in the most comprehensive and elaborate investigation of the literature in this area of research. The systematic analysis of the research literature has revealed patterns, trends, and gaps in the existing literature, and underlined key challenges and opportunities that will shape the focus of future research efforts. © 2016 IEEE.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Ruiz-Heras, A.</author><author>García-Teodoro, P.</author><author>Sánchez-Casado, L.</author></authors></contributors><titles><title>ADroid: anomaly-based detection of malicious events in Android platforms</title><secondary-title>International Journal of Information Security</secondary-title></titles><periodical><full-title>International Journal of Information Security</full-title></periodical><pages>371-384</pages><volume>16</volume><issue>4</issue><keywords><keyword>Anomaly detection</keyword><keyword>Behavior</keyword><keyword>Malicious event</keyword><keyword>Malware</keyword><keyword>Mobile device</keyword><keyword>Security</keyword></keywords><dates><year>2017</year></dates><publisher>Springer Berlin Heidelberg</publisher><electronic-resource-num>10.1007/s10207-016-0333-1</electronic-resource-num><urls><pdf-urls><url>internal-pdf://ADroid_anomaly-based detection of malicious events in Android_2017.pdf</url></pdf-urls></urls><abstract>As mobile devices become more and more adopted by users for daily personal and professional activities, associated security risks and impact to them also increase. Although there are a number of proposals aimed at fighting against such incidents, the topic still remains challenging. This paper presents ADroid, a novel security tool for Android platforms with three main distinguishing characteristics. First, three groups of features are monitored over time: interfaces usage, application-related and communication-related features. Second, a lightweight anomaly-based detection procedure is performed over these features in order to determine the occurrence of unexpected abnormal activities. Third, the user can also create specific white/black lists to indicate in an easy way certain allowed/undesired activities which, if so, should trigger an alarm by the supervision system. ADroid has been implemented in a real environment and evaluated through experimentation. The detection accuracy exhibited and the resources consumption involved in its operation show the goodness and promising capabilities of the system.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Feizollah, Ali</author><author>Anuar, Nor Badrul</author><author>Salleh, Rosli</author><author>Suarez-Tangil, Guillermo</author><author>Furnell, Steven</author></authors></contributors><titles><title>AndroDialysis: Analysis of Android Intent Effectiveness in Malware Detection</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>121-134</pages><volume>65</volume><issue>March</issue><keywords><keyword>Android</keyword><keyword>Intent</keyword><keyword>Mobile malware</keyword><keyword>Smartphone security</keyword><keyword>Static analysis</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Ltd</publisher><electronic-resource-num>10.1016/j.cose.2016.11.007</electronic-resource-num><urls><pdf-urls><url>internal-pdf://AndroDialysis_Analysis of Android Intent Effectiveness in Malware_2017.pdf</url><url>internal-pdf://Feizollah et al. - 2017 - AndroDialysis Analysis of Android Intent Effectiveness in Malware Detection.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2016.11.007</url></web-urls></urls><abstract>The wide popularity of Android systems has been accompanied by increase in the number of malware targeting these systems. This is largely due to the open nature of the Android framework that facilitates the incorporation of third-party applications running on top of any Android device. Inter-process communication is one of the most notable features of the Android framework as it allows the reuse of components across process boundaries. This mechanism is used as gateway to access different sensitive services in the Android framework. In the Android platform, this communication system is usually driven by a late runtime binding messaging object known as Intent. In this paper, we evaluate the effectiveness of Android Intents (explicit and implicit) as a distinguishing feature for identifying malicious applications. We show that Intents are semantically rich features that are able to encode the intentions of malware when compared to other well-studied features such as permissions. We also argue that this type of feature is not the ultimate solution. It should be used in conjunction with other known features. We conducted experiments using a dataset containing 7406 applications that comprise 1846 clean and 5560 infected applications. The results show detection rate of 91% using Android Intent against 83% using Android permission. Additionally, experiment on combination of both features results in detection rate of 95.5%.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rashidi, Bahman</author><author>Fung, Carol</author><author>Vu, Tam</author></authors></contributors><titles><title>Android fine-grained permission control system with real-time expert recommendations</title><secondary-title>Pervasive and Mobile Computing</secondary-title></titles><periodical><full-title>Pervasive and Mobile Computing</full-title></periodical><pages>62-77</pages><volume>32</volume><keywords><keyword>Crowdsourcing</keyword><keyword>Permission</keyword><keyword>Recommendation</keyword><keyword>Smartphone</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.pmcj.2016.04.013</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Android fine-grained permission control system with real-time expert_2016.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.pmcj.2016.04.013</url></web-urls></urls><abstract>In current Android architecture design, users have to decide whether an app is safe to use or not. Expert users can make savvy decisions to prevent unnecessary privacy breach. However, inexperienced users may not be able to decide correctly. To assist inexperienced users to make a right permission granting decisions, we propose RecDroid. RecDroid is a crowdsourcing recommendation framework that facilitates a user-help-user environment regarding smartphone permission control. In this framework, the responses from expert users are aggregated and recommended to other users. We implement our prototype on Android platform and evaluated the system through simulation and real user study.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Chen, Jian</author><author>Alalfi, Manar H.</author><author>Dean, Thomas R.</author><author>Zou, Ying</author></authors></contributors><titles><title>Detecting Android Malware Using Clone Detection</title><secondary-title>Journal of Computer Science and Technology</secondary-title></titles><periodical><full-title>Journal of Computer Science and Technology</full-title></periodical><pages>942-956</pages><volume>30</volume><issue>5</issue><keywords><keyword>Android</keyword><keyword>clone detection</keyword><keyword>malware</keyword></keywords><dates><year>2015</year></dates><isbn>1139001515</isbn><electronic-resource-num>10.1007/s11390-015-1573-7</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Chen et al. - 2015 - Detecting Android Malware Using Clone Detection.pdf</url><url>internal-pdf://Detecting Android Malware Using Clone Detection_2015.pdf</url></pdf-urls></urls><abstract>Android is currently one of the most popular smartphone operating systems. However, Android has the largest share of global mobile malware and significant public attention has been brought to the security issues of Android. In this paper, we investigate the use of a clone detector to identify known Android malware. We collect a set of Android applications known to contain malware and a set of benign applications. We extract the Java source code from the binary code of the applications and use NiCad, a near-miss clone detector, to find the classes of clones in a small subset of the malicious applications. We then use these clone classes as a signature to find similar source files in the rest of the malicious applications. The benign collection is used as a control group. In our evaluation, we successfully decompile more than 1 000 malicious apps in 19 malware families. Our results show that using a small portion of malicious applications as a training set can detect 95% of previously known malware with very low false positives and high accuracy at 96.88%. Our method can effectively and reliably pinpoint malicious applications that belong to certain malware families.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Wang, Wei</author><author>Li, Yuanyuan</author><author>Wang, Xing</author><author>Liu, Jiqiang</author><author>Zhang, Xiangliang</author></authors></contributors><titles><title>Detecting Android malicious apps and categorizing benign apps with ensemble of classifiers</title><secondary-title>Future Generation Computer Systems</secondary-title></titles><periodical><full-title>Future Generation Computer Systems</full-title></periodical><keywords><keyword>Android security</keyword><keyword>Classification</keyword><keyword>Ensemble learning</keyword><keyword>Intrusion detection</keyword><keyword>Malware detection</keyword><keyword>Static analysis</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier B.V.</publisher><electronic-resource-num>10.1016/j.future.2017.01.019</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Detecting android malicious apps and categorizing benign apps with_2017.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.future.2017.01.019</url></web-urls></urls><abstract>Android platform has dominated the markets of smart mobile devices in recent years. The number of Android applications (apps) has seen a massive surge. Unsurprisingly, Android platform has also become the primary target of attackers. The management of the explosively expansive app markets has thus become an important issue. On the one hand, it requires effectively detecting malicious applications (malapps) in order to keep the malapps out of the app market. On the other hand, it needs to automatically categorize a big number of benign apps so as to ease the management, such as correcting an app's category falsely designated by the app developer. In this work, we propose a framework to effectively and efficiently manage a big app market in terms of detecting malapps and categorizing benign apps. We extract 11 types of static features from each app to characterize the behaviors of the app, and employ the ensemble of multiple classifiers, namely, Support Vector Machine (SVM), K-Nearest Neighbor (KNN), Naive Bayes (NB), Classification and Regression Tree (CART) and Random Forest (RF), to detect malapps and to categorize benign apps. An alarm will be triggered if an app is identified as malicious. Otherwise, the benign app will be identified as a specific category. We evaluate the framework on a large app set consisting of 107,327 benign apps as well as 8,701 malapps. The experimental results show that our method achieves the accuracy of 99.39% in the detection of malapps and achieves the best accuracy of 82.93% in the categorization of benign apps.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Balachandran, Vivek</author><author>Sufatrio</author><author>Tan, Darell J.J.</author><author>Thing, Vrizlynn L.L.</author></authors></contributors><titles><title>Control flow obfuscation for Android applications</title><secondary-title>Computers and Security</secondary-title></titles><periodical><full-title>Computers and Security</full-title></periodical><pages>72-93</pages><volume>61</volume><keywords><keyword>Android</keyword><keyword>Application security</keyword><keyword>Mobile security</keyword><keyword>Reverse engineering</keyword><keyword>Software obfuscation</keyword></keywords><dates><year>2016</year></dates><publisher>Elsevier Ltd</publisher><isbn>0167-4048</isbn><electronic-resource-num>10.1016/j.cose.2016.05.003</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Control flow obfuscation for android applications_2016.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.cose.2016.05.003</url></web-urls></urls><abstract>Android apps are vulnerable to reverse engineering, which makes app tampering and repackaging relatively easy. While obfuscation is widely known to make reverse engineering harder, complex and effective control flow obfuscations by rearranging Android bytecode instructions have not been implemented in various Android obfuscation tools. This paper presents our control-flow obfuscation techniques for Android apps at the Dalvik bytecode level. Our three proposed schemes go beyond simple control-flow transformations employed by existing Android obfuscators, and make it difficult for static analysis to determine the actual app control flows. To realize this, we also address a previously-unsolved register-type conflict problem that can be raised by the verifier module of the Android runtime system by means of a type separation technique. Our analysis and experimentation show that the schemes can offer effective obfuscation with reasonable performance and size overheads. Combined with the existing data and layout obfuscation techniques, our schemes can offer attractive measures to hinder reverse engineering and code analysis on Android apps, and help safeguard Android app developers' heavy investment in their apps.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Tong, Fei</author><author>Yan, Zheng</author></authors></contributors><titles><title>A hybrid approach of mobile malware detection in Android</title><secondary-title>Journal of Parallel and Distributed Computing</secondary-title></titles><periodical><full-title>Journal of Parallel and Distributed Computing</full-title></periodical><pages>22-31</pages><volume>103</volume><keywords><keyword>Android</keyword><keyword>Malware detection</keyword><keyword>Pattern match</keyword><keyword>System call</keyword></keywords><dates><year>2017</year></dates><publisher>Elsevier Inc.</publisher><electronic-resource-num>10.1016/j.jpdc.2016.10.012</electronic-resource-num><urls><pdf-urls><url>internal-pdf://A hybrid approach of mobile malware detection in Android_2017.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.jpdc.2016.10.012</url></web-urls></urls><abstract>Android security incidents occurred frequently in recent years. This motivates us to study mobile app security, especially in Android open mobile operating system. In this paper, we propose a novel hybrid approach for mobile malware detection by adopting both dynamic analysis and static analysis. We collect execution data of sample malware and benign apps using a net_link technology to generate patterns of system calls related to file and network access. Furthermore, we build up a malicious pattern set and a normal pattern set by comparing the patterns of malware and benign apps with each other. For detecting an unknown app, we use a dynamic method to collect its system calling data. We then compare them with both the malicious and normal pattern sets offline in order to judge the unknown app. Based on the test on a set of mobile malware and benign apps, we found that our approach achieves better detection success rate than some methods using either static analysis or dynamic analysis. What is more, the proposed approach is generic, which can detect different types of malware effectively. Its detection accuracy can be further improved since the pattern sets can be automatically optimized through self-learning.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Yan, Ping</author><author>Yan, Zheng</author></authors></contributors><titles><title>A survey on dynamic mobile malware detection</title><secondary-title>Software Quality Journal</secondary-title></titles><periodical><full-title>Software Quality Journal</full-title></periodical><pages>1-29</pages><keywords><keyword>Classification algorithm</keyword><keyword>Dynamic malware detection</keyword><keyword>Evaluation criteria</keyword><keyword>Mobile malware</keyword><keyword>Security threats</keyword></keywords><dates><year>2017</year></dates><publisher>Software Quality Journal</publisher><electronic-resource-num>10.1007/s11219-017-9368-4</electronic-resource-num><urls><pdf-urls><url>internal-pdf://A survey on dynamic mobile malware detection_2017.pdf</url></pdf-urls></urls><abstract>The outstanding advances of mobile devices stimulate their wide usage. Since mobile devices are coupled with third-party applications, lots of security and privacy problems are induced. However, current mobile malware detection and analysis technologies are still imperfect, ineffective, and incomprehensive. Due to the specific characteristics of mobile devices such as limited resources, constant network connectivity, user activities and location sensing, and local communication capability, mobile malware detection faces new challenges, especially on dynamic runtime malware detection. Many intrusions or attacks could happen after a mobile app is installed or executed. The literature still expects practical and effective dynamic malware detection approaches. In this paper, we give a thorough survey on dynamic mobile malware detection. We first introduce the definition, evolution, classification, and security threats of mobile malware. Then, we summarize a number of criteria and performance evaluation measures of mobile malware detection. Furthermore, we compare, analyze, and comment on existing mobile malware detection methods proposed in recent years based on evaluation criteria and measures. Finally, we figure out open issues in this research field and motivate future research directions.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Milosevic, Nikola</author><author>Dehghantanha, Ali</author><author>Choo, Kim Kwang Raymond</author></authors></contributors><titles><title>Machine learning aided Android malware classification</title><secondary-title>Computers and Electrical Engineering</secondary-title></titles><periodical><full-title>Computers and Electrical Engineering</full-title></periodical><volume>61</volume><keywords/><dates><year>2017</year></dates><electronic-resource-num>10.1016/j.compeleceng.2017.02.013</electronic-resource-num><urls/><abstract>The widespread adoption of Android devices and their capability to access significant private and confidential information have resulted in these devices being targeted by malware developers. Existing Android malware analysis techniques can be broadly categorized into static and dynamic analysis. In this paper, we present two machine learning aided approaches for static analysis of Android malware. The first approach is based on permissions and the other is based on source code analysis utilizing a bag-of-words representation model. Our permission-based model is computationally inexpensive, and is implemented as the feature of OWASP Seraphimdroid Android app that can be obtained from Google Play Store. Our evaluations of both approaches indicate an F-score of 95.1% and F-measure of 89% for the source code-based classification and permission-based classification models, respectively.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Maggi, Federico</author><author>Valdi, Andrea</author><author>Zanero, Stefano</author></authors></contributors><titles><title>AndroTotal: A Flexible, Scalable Toolbox and Service for Testing Mobile Malware Detectors</title><secondary-title>ACM CCS Workshop on Security and Privacy in Smartphones and Mobile Devices (SPSM)</secondary-title></titles><periodical><full-title>ACM CCS Workshop on Security and Privacy in Smartphones and Mobile Devices (SPSM)</full-title></periodical><pages>49-54</pages><keywords><keyword>2</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>android</keyword><keyword>categories and subject descriptors</keyword><keyword>d</keyword><keyword>invasive software</keyword><keyword>malware</keyword><keyword>malware detectors</keyword><keyword>security and protection</keyword><keyword>testing</keyword></keywords><dates><year>2013</year></dates><isbn>9781450324915</isbn><electronic-resource-num>10.1145/2516760.2516768</electronic-resource-num><urls><pdf-urls><url>internal-pdf://29dac9c6fcd91cd84dafe5b3e0d86ca235f5.pdf</url></pdf-urls></urls><abstract>Name-AndroTotal. They build a platform like VirusTotal where they test anti-virus mobile tools on the phone itself.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Fedler, Rafael</author><author>Kulicke, Marcel</author><author>Schütte, Julian</author></authors></contributors><titles><title>Native Code Execution Control for Attack Mitigation on Android</title><secondary-title>Proceedings of the 3rd ACM Workshop on Security and Privacy in Smartphones &amp; Mobile Devices (SPSM)</secondary-title></titles><periodical><full-title>Proceedings of the 3rd ACM Workshop on Security and Privacy in Smartphones &amp; Mobile Devices (SPSM)</full-title></periodical><pages>15-20</pages><keywords><keyword>android</keyword><keyword>exploit mitigation</keyword><keyword>malware</keyword><keyword>mobile security</keyword></keywords><dates><year>2013</year></dates><isbn>9781450324915</isbn><electronic-resource-num>10.1145/2516760.2516765</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Fedler, Kulicke, Schütte - 2013 - Native Code Execution Control for Attack Mitigation on Android.pdf</url><url>internal-pdf://Fedler, Kulicke, Schütte - 2013 - Native Code Execution Control for Attack Mitigation on Android(2).pdf</url><url>internal-pdf://native-fedler-2013.pdf</url></pdf-urls></urls><abstract>They modify the OS to mitigate root explots. Binary: chmod +x (syscall, libc, and bin) is restricted to system UIDs OR permission. Libraries: restrict loading to system ones OR executable bit OR permission.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Feizollah, Ali</author><author>Anuar, Nor Badrul</author><author>Salleh, Rosli</author><author>Wahab, Ainuddin Wahid Abdul</author></authors></contributors><titles><title>A review on feature selection in mobile malware detection</title><secondary-title>Digital Investigation</secondary-title></titles><periodical><full-title>Digital Investigation</full-title></periodical><pages>22-37</pages><volume>13</volume><issue>March</issue><keywords><keyword>Android</keyword><keyword>Feature selection</keyword><keyword>Mobile malware</keyword><keyword>Mobile operating system</keyword><keyword>Review paper</keyword></keywords><dates><year>2015</year></dates><publisher>Elsevier Ltd</publisher><isbn>978-1-4673-2358-1</isbn><electronic-resource-num>10.1016/j.diin.2015.02.001</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Feizollah et al. - 2015 - A review on feature selection in mobile malware detection.pdf</url></pdf-urls><web-urls><url>http://dx.doi.org/10.1016/j.diin.2015.02.001</url></web-urls></urls><abstract>The widespread use of mobile devices in comparison to personal computers has led to a new era of information exchange. The purchase trends of personal computers have started decreasing whereas the shipment of mobile devices is increasing. In addition, the increasing power of mobile devices along with portability characteristics has attracted the attention of users. Not only are such devices popular among users, but they are favorite targets of attackers. The number of mobile malware is rapidly on the rise with malicious activities, such as stealing users data, sending premium messages and making phone call to premium numbers that users have no knowledge. Numerous studies have developed methods to thwart such attacks. In order to develop an effective detection system, we have to select a subset of features from hundreds of available features. In this paper, we studied 100 research works published between 2010 and 2014 with the perspective of feature selection in mobile malware detection. We categorize available features into four groups, namely, static features, dynamic features, hybrid features and applications metadata. Additionally, we discuss datasets used in the recent research studies as well as analyzing evaluation measures utilized.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Lindorfer, Martina</author><author>Neugschwandtner, Matthias</author><author>Weichselbaum, Lukas</author><author>Fratantonio, Yanick</author><author>Veen, Victor Van Der</author><author>Platzer, Christian</author></authors></contributors><titles><title>ANDRUBIS - 1,000,000 Apps Later: A View on Current Android Malware Behaviors</title><secondary-title>Proceedings - 3rd International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security, BADGERS 2014</secondary-title></titles><periodical><full-title>Proceedings - 3rd International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security, BADGERS 2014</full-title></periodical><pages>3-17</pages><keywords><keyword>Android</keyword><keyword>Data Collection</keyword><keyword>Dynamic Analysis</keyword><keyword>Malware</keyword><keyword>Measurements</keyword><keyword>Static Analysis</keyword></keywords><dates><year>2016</year></dates><isbn>9781479983087</isbn><electronic-resource-num>10.1109/BADGERS.2014.7</electronic-resource-num><urls><pdf-urls><url>internal-pdf://andrubis-lindorfer-2014.pdf</url></pdf-urls></urls><abstract>Anubis is a dynamic malware analysis platform that executes submitted binaries in a controlled environment. To perform the analysis, the system monitors the invocation of important Windows API calls and system services, it records the network traffic, and it tracks data flows. For each submission, reports are generated that provide comprehensive reports about the activities of the binary under analysis. Anubis receives malware samples through a public web interface and a number of feeds from security organizations and anti-malware companies. Because the samples are collected from a wide range of users, the collected samples represent a comprehensive and diverse mix of malware found in the wild. In this paper, we aim to shed light on common malware behaviors. To this end, we evaluate the Anubis analysis results for almost one million malware samples, study trends and evolution of malicious behaviors over a period of almost two years, and examine the influence of code polymorphism on malware statistics.</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Felt, Adrienne Porter</author><author>Ha, Elizabeth</author><author>Egelman, Serge</author><author>Haney, Ariel</author><author>Chin, Erika</author><author>Wagner, David</author></authors></contributors><titles><title>Android permissions</title><secondary-title>Proceedings of the Eighth Symposium on Usable Privacy and Security - SOUPS '12</secondary-title></titles><periodical><full-title>Proceedings of the Eighth Symposium on Usable Privacy and Security - SOUPS '12</full-title></periodical><pages>1</pages><keywords><keyword>android</keyword><keyword>least privilege</keyword><keyword>permissions</keyword></keywords><dates><year>2012</year></dates><isbn>9781450315326</isbn><electronic-resource-num>10.1145/2335356.2335360</electronic-resource-num><urls><pdf-urls><url>internal-pdf://felt-androidpermission-2011.PDF</url></pdf-urls><web-urls><url>http://dl.acm.org/citation.cfm?doid=2335356.2335360</url></web-urls></urls><abstract>Android provides third-party applications with an extensive API that includes access to phone hardware, settings, and user data. Access to privacy- and security-relevant parts of the API is controlled with an install-time application permis- sion system. We study Android applications to determine whether Android developers follow least privilege with their permission requests. We built Stowaway, a tool that detects overprivilege in compiled Android applications. Stowaway determines the set of API calls that an application uses and then maps those API calls to permissions. We used auto- mated testing tools on the Android API in order to build the permission map that is necessary for detecting overpriv- ilege. We apply Stowaway to a set of 940 applications and find that about one-third are overprivileged. We investigate the causes of overprivilege and find evidence that developers are trying to follow least privilege but sometimes fail due to insufficient API documentation:</abstract></record><record><database name="My Collection_901to 1028.enl" path="My Collection_901to 1028.enl">My Collection_901to 1028.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rastogi, V</author><author>Chen, Y</author><author>Jiang, X</author></authors></contributors><titles><title>DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks</title><secondary-title>NORTHWESTERN University</secondary-title></titles><periodical><full-title>NORTHWESTERN University</full-title></periodical><pages>329-334</pages><issue>March</issue><keywords><keyword>android</keyword><keyword>anti-malware</keyword><keyword>malware</keyword><keyword>mobile</keyword></keywords><dates><year>2013</year></dates><isbn>9781450317672</isbn><electronic-resource-num>10.1145/2484313.2484355</electronic-resource-num><urls><pdf-urls><url>internal-pdf://droidchameleon-rastogi-2013.pdf</url></pdf-urls></urls><abstract>Mobile malware threats (e.g., on Android) have recently become a real concern. In this paper, we evaluate the state-of-the-art com-mercial mobile anti-malware products for Android and test how resistant they are against various common obfuscation techniques (even with known malware). Such an evaluation is important for not only measuring the available defense against mobile malware threats but also proposing effective, next-generation solutions. We developed DroidChameleon, a systematic framework with various transformation techniques, and used it for our study. Our results on ten popular commercial anti-malware applications for Android are worrisome: none of these tools is resistant against common mal-ware transformation techniques. Moreover, the transformations are simple in most cases and anti-malware tools make little effort to provide transformation-resilient detection. Finally, in the light of our results, we propose possible remedies for improving the cur-rent state of malware detection on mobile devices.</abstract></record></records></xml>
